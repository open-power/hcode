<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: import/hwpf/fapi2/xml/attribute_info/scratch_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER EKB Project                                                  -->
<!--                                                                        -->
<!-- COPYRIGHT 2015,2020                                                    -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<!--
    XML file specifying HWPF attributes.
    These are scratch attributes that can be used by PLAT FW for  unit test.
    They can also be used temporarily by a HWP while waiting for an official
    attribute to be supported.
-->

<attributes>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT8_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint8_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint8</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT8_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint8_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint8</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT32_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint32_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint32</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT32_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint32_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint32</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT64_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint64_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint64</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT64_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint64_t attribute
        Can be used by HWPs for testing.
    </description>
    <valueType>uint64</valueType>
    <enum>VAL_A = 0, VAL_B = 5, VAL_C = 0xffffffffffffffff</enum>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT8_ARRAY_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint8_t[32] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint8</valueType>
    <array>32</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT8_ARRAY_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint8_t[2][3][4] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint8</valueType>
    <array>2 3 4</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT32_ARRAY_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint32_t[8] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint32</valueType>
    <array>8</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT32_ARRAY_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint32_t[2][3] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint32</valueType>
    <array>2,3</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT64_ARRAY_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint64_t[4] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint64</valueType>
    <array>4</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_UINT64_ARRAY_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch uint64_t[2][2] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>uint64</valueType>
    <array> 2, 2 </array>
    <enum>VAL_A = 0x0123456789abcdef, VAL_B = 0, VAL_C = 0xffffffffffffffff</enum>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT8_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int8_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int8</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT8_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int8_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int8</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT32_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int32_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int32</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT32_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int32_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int32</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT64_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int64_t attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int64</valueType>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT64_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int64_t attribute
        Can be used by HWPs for testing.
    </description>
    <valueType>int64</valueType>
    <enum>VAL_A = 0, VAL_B = 5, VAL_C = 0xffffffffffffffff</enum>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT8_ARRAY_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int8_t[32] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int8</valueType>
    <array>32</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT8_ARRAY_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int8_t[2][3][4] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int8</valueType>
    <array>2 3 4</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT32_ARRAY_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int32_t[8] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int32</valueType>
    <array>8</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT32_ARRAY_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int32_t[2][3] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int32</valueType>
    <array>2,3</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT64_ARRAY_1</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int64_t[4] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int64</valueType>
    <array>4</array>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SCRATCH_INT64_ARRAY_2</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Scratch int64_t[2][2] attribute.
        Can be used by HWPs for testing.
    </description>
    <valueType>int64</valueType>
    <array> 2, 2 </array>
    <enum>VAL_A = 0x0123456789abcdef, VAL_B = 0, VAL_C = 0xffffffffffffffff</enum>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_DUMMY_SCRATCH_PLAT_INIT_UINT8</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
        Dummy platInit uint8[1][3][5] attribute used for testing.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <writeable/>
    <array>1, 3, 5</array>
  </attribute>
</attributes>
