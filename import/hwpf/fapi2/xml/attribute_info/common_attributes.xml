<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: import/hwpf/fapi2/xml/attribute_info/common_attributes.xml $  -->
<!--                                                                        -->
<!-- OpenPOWER EKB Project                                                  -->
<!--                                                                        -->
<!-- COPYRIGHT 2015,2020                                                    -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
  <!-- ******************************************************************************** -->
  <attribute>
    <id>ATTR_FUNCTIONAL</id>
    <targetType>
      TARGET_TYPE_PROC_CHIP,
      TARGET_TYPE_CORE, TARGET_TYPE_EX, TARGET_TYPE_EQ, 
      TARGET_TYPE_MCS, TARGET_TYPE_MCA, TARGET_TYPE_MCBIST, TARGET_TYPE_MI, TARGET_TYPE_DMI,
      TARGET_TYPE_XBUS, TARGET_TYPE_OBUS,
      TARGET_TYPE_NV,
      TARGET_TYPE_SBE, TARGET_TYPE_PPE, TARGET_TYPE_PERV,
      TARGET_TYPE_PEC, TARGET_TYPE_PHB, TARGET_TYPE_CAPP,
      TARGET_TYPE_MEMBUF_CHIP,
      TARGET_TYPE_MBA,
      TARGET_TYPE_DIMM
    </targetType>
    <description>
      1 if the target is functional, else 0.  Set by the platform.
    </description>
    <valueType>uint8</valueType>
    <enum>
      NON_FUNCTIONAL = 0x0,
      FUNCTIONAL = 0x1
    </enum>
    <platInit/>
  </attribute>
  <!-- ******************************************************************************** -->
  <attribute>
    <id>ATTR_POS</id>
    <targetType>TARGET_TYPE_PROC_CHIP, TARGET_TYPE_MEMBUF_CHIP, TARGET_TYPE_DIMM</targetType>
    <description>
      Physical position of chip/dimm within drawer
      This data is from the MRW.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
  </attribute>
  <!-- ******************************************************************************** -->
  <attribute>
    <id>ATTR_FAPI_POS</id>
    <targetType>
      TARGET_TYPE_PROC_CHIP, TARGET_TYPE_MEMBUF_CHIP, TARGET_TYPE_DIMM,
      TARGET_TYPE_CORE, TARGET_TYPE_EX, TARGET_TYPE_EQ,
      TARGET_TYPE_MCS, TARGET_TYPE_MCA, TARGET_TYPE_MCBIST, TARGET_TYPE_MI, TARGET_TYPE_DMI,
      TARGET_TYPE_XBUS, TARGET_TYPE_OBUS,
      TARGET_TYPE_NV,
      TARGET_TYPE_SBE, TARGET_TYPE_PPE, TARGET_TYPE_PERV,
      TARGET_TYPE_PEC, TARGET_TYPE_PHB, TARGET_TYPE_CAPP,
      TARGET_TYPE_MBA
    </targetType>
    <description>
      Logical position of target within a system. This is derived from the SMP location
      of each processor and each target's relationship to a proc.
      - PROC = based on SMP groupid+chipid
      - MEMBUF = PROC:FAPI_POS * [max membuf per proc]
      - 1st level child unit = [parent chip]:FAPI_POS * [max children of this type per chip]
      - 2nd+ level child unit = [immediate parent unit]:FAPI_POS * [max units below parent]
      Note: This should not be used algorithmically by HWPs directly.
      Note: Value ignores physical drawer boundaries, the value is unique across the entire
            system.
      This data is derived from the MRW.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
  </attribute>
  <!-- ******************************************************************************** -->
</attributes>
