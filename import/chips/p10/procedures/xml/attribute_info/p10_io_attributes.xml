<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: import/chips/p10/procedures/xml/attribute_info/p10_io_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER EKB Project                                                  -->
<!--                                                                        -->
<!-- COPYRIGHT 2018,2021                                                    -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<!-- EKB-Mirror-To: hwsv -->
<attributes>
 <!-- ******************************************************************************** -->

  <attribute>
    <id>ATTR_OMI_SPREAD_SPECTRUM</id>
    <targetType>
      TARGET_TYPE_PROC_CHIP
    </targetType>
    <description>
       Specifies if spread spectrum is enabled for the OMI links
    </description>
    <valueType>uint8</valueType>
    <enum>
      ENABLED = 0x01,
      DISABLED = 0x00
    </enum>
    <default>DISABLED</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_IOHS_SPREAD_SPECTRUM</id>
    <targetType>
      TARGET_TYPE_PROC_CHIP
    </targetType>
    <description>
       Specifies if spread spectrum is enabled for the iohs links
    </description>
    <valueType>uint8</valueType>
    <enum>
      ENABLED = 0x01,
      DISABLED = 0x00
    </enum>
    <default>DISABLED</default>
    <platInit/>
  </attribute>
  
  <attribute>
    <id>ATTR_VIO_SET_POINT_MV</id>
    <targetType>
      TARGET_TYPE_PROC_CHIP
    </targetType>
    <description>
       The VIO Setpoint in mv
    </description>
    <valueType>uint32</valueType>
    <initToZero/>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_IOHS_MFG_BAD_LANE_VEC</id>
    <targetType>
      TARGET_TYPE_IOHS
    </targetType>
    <description>
       Bit vector specifying bad lanes identified via manufacturing
       test.  Data is stored left aligned in attribute, one bit
       per lane, with 0b1 indicating a bad lane, and 0b0 indicating
       a good lane.  

       Source: MER0 record, #I keyword
    </description>
    <valueType>uint32</valueType>
    <initToZero/>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_IOHS_MFG_BAD_LANE_VEC_VALID</id>
    <targetType>
      TARGET_TYPE_IOHS
    </targetType>
    <description>
       Indicates bad lane vector information is valid
    </description>
    <valueType>uint8</valueType>
    <enum>
      FALSE = 0,
      TRUE = 1
    </enum>
    <default>FALSE</default>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_IO_IOHS_CHANNEL_LOSS</id>
    <targetType>
      TARGET_TYPE_IOHS
    </targetType>
    <description>
       Specifies the channel loss
    </description>
    <valueType>uint8</valueType>
    <enum>
      HIGH_LOSS = 0x00,
      MID_LOSS = 0x01,
      LOW_LOSS = 0x02
    </enum>
    <default>HIGH_LOSS</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_IO_OMI_CHANNEL_LOSS</id>
    <targetType>
      TARGET_TYPE_OMI
    </targetType>
    <description>
       Specifies the channel loss
    </description>
    <valueType>uint8</valueType>
    <enum>
      HIGH_LOSS = 0x00,
      MID_LOSS = 0x01,
      LOW_LOSS = 0x02
    </enum>
    <default>HIGH_LOSS</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_IO_OMI_PRE1</id>
    <targetType>
      TARGET_TYPE_OMI
    </targetType>
    <description>
       OMI PRE1 settings
    </description>
    <valueType>uint8</valueType>
    <default>0x00</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_IO_OMI_PRE2</id>
    <targetType>
      TARGET_TYPE_OMI
    </targetType>
    <description>
       OMI PRE2 settings
    </description>
    <valueType>uint8</valueType>
    <default>0x00</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_IO_IOHS_PRE1</id>
    <targetType>
      TARGET_TYPE_IOHS
    </targetType>
    <description>
       IOHS PRE1 settings
    </description>
    <valueType>uint8</valueType>
    <default>0x00</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_IO_IOHS_PRE2</id>
    <targetType>
      TARGET_TYPE_IOHS
    </targetType>
    <description>
       IOHS PRE2 settings
    </description>
    <valueType>uint8</valueType>
    <default>0x00</default>
    <platInit/>
  </attribute>

  <attribute>
    <id>ATTR_OMI_DL_GROUP_POS</id>
    <targetType>
      TARGET_TYPE_OMI
    </targetType>
    <description>
       An OMI target's relative logical postion to its OMIC parent target.

       pos | DL_GROUP_POS
      -----+--------------
         4 | 0
         5 | 1
         6 | 2
         7 | 0
         2 | 1
         3 | 2
         0 | 0
         1 | 1
        12 | 0
        13 | 1
        14 | 2
        15 | 0
        10 | 1
        11 | 2
         8 | 0
         9 | 1

    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>0xFF</default><!-- Ensures platform explicitly puts a valid number in here -->
  </attribute>
  <!-- ******************************************************************************** -->
  <attribute>
    <id>ATTR_OMI_DL_NUM</id>
    <targetType>
      TARGET_TYPE_OMI
    </targetType>
    <description>
      An OMI target's logical DL number

       pos | DL_NUM
      -----+--------------
         0 | 6
         1 | 7
         2 | 4
         3 | 5
         4 | 0
         5 | 1
         6 | 2
         7 | 3
         8 | 14
         9 | 15
        10 | 12
        11 | 13
        12 | 8
        13 | 9
        14 | 10
        15 | 11

    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <default>0xFF</default><!-- Ensures platform explicitly puts a valid number in here -->
  </attribute>
  <!-- ******************************************************************************** -->
  <attribute>
    <id>ATTR_OCMB_COUNTER</id>
    <targetType>
      TARGET_TYPE_OCMB_CHIP
    </targetType>
    <description>
        Tracks the sequence id for OCMB command transactions. The platform is
        expected to guarantee a unique value on each read.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
    <default>0</default>
  </attribute>
  <!-- ******************************************************************************** -->
  <attribute>
    <id>ATTR_VIO_RAILS_NOT_POWERED</id>
    <targetType>
      TARGET_TYPE_PROC_CHIP
    </targetType>
    <description>
      Indicates which, if any, VIO rails are not powered at the system level.

      This value is overlaid onto the partial good information stored in VPD related to
      memory controllers and/or AXO buses.

       bit | Rail
      -----+--------------
         0 | VIO_MC01
         1 | VIO_MC23
         2 | VIO_OP01
         3 | VIO_OP23
         4 | VIO_OP45
         5 | VIO_OP67

    </description>
    <valueType>uint8</valueType>
    <platInit/>
    <initToZero/>   <!-- Assumes all these rails are powered in the system by default   -->
    <overrideOnly/> <!-- Keeps it from being MRW visible until exposure is needed       -->
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SAVED_PB_PTL_FIR_MASK</id>
    <targetType>TARGET_TYPE_PAUC</targetType>
    <description>
        This attribute provides a place for Hostboot to save off the
        PB_PTL_FIR_MASK register during MPIPL, so that it can temporarily mask
        off FIR bits related to cross-node bus errors.  During runtime after
        an MPIPL, HBRT restores the FIR mask from this attribute in order to let
        PRD handle cross-node errors.

        Hostboot will need to save the values in MPIPL during
        host_discover_targets. Values will need to be restored after the
        PEER_TARGET values have been updated in HBRT.
    </description>
    <valueType>uint64</valueType>
    <initToZero/>
    <writeable/>
    <platInit/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_SAVED_DLP_FIR_MASK</id>
    <targetType>TARGET_TYPE_IOHS</targetType>
    <description>
        This attribute provides a place for Hostboot to save off the DL_FIR_MASK
        register during MPIPL, so that it can temporarily mask off FIR bits
        related to cross-node bus errors.  During runtime after an MPIPL, HBRT
        restores the FIR mask from this attribute in order to let PRD handle
        cross-node errors.

        Hostboot will need to save the values in MPIPL during
        host_discover_targets. Values will need to be restored after the
        PEER_TARGET values have been updated in HBRT.
    </description>
    <valueType>uint64</valueType>
    <initToZero/>
    <writeable/>
    <platInit/>
  </attribute>
  <!-- ********************************************************************* -->
</attributes>
