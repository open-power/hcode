<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: import/chips/p10/procedures/xml/attribute_info/p10_pcie_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER EKB Project                                                  -->
<!--                                                                        -->
<!-- COPYRIGHT 2015,2020                                                    -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<!-- p10_pcie_attributes.xml -->
<attributes>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_PHB_ACTIVE</id>
    <targetType>TARGET_TYPE_PEC</targetType>
    <description>
      This attribute controls the latches required to configure the PEC as a x16, x8x8, or x8x4x4 based on what PHBs are active defined from the MRW.
      creator: platform
      consumer: p10_pcie_scominit
      firmware notes:
        These are config dependent attributes based on PCIe Lane/sideband signal routing and PCIe endpoints attached.

       Attribute Name                Definition                Example      Comments       Targeted Register Latches
       ATTR_PROC_PCIE_PHB_ACTIVE     (Stack0, Stack1, Stack2)  (1, 0, 0)    PHB0 enabled   TC_PCI_LANE_CFG_DC_0H, TC_PCI_LANE_CFG_DC_1H
                                                                            PHB1 disabled
                                                                            PHB2 disabled

       Register Latch Definition:
       PCI0 / PCI1                                
       Register Address      Register Name             Bit    Signal Name                Bit Description
       8000009 / 9000009     TPPCI.PCI.CPLT_CONF1      0      TC_PCI_LANE_CFG_DC_0H      MSB for  LANE CFG  in the logic that configures x16, x8x8, x8x4x4
                                                       1      TC_PCI_LANE_CFG_DC_1H      LSB for LANE CFG  in the logic that configures x16, x8x8, x8x4x4

                                                       2      TC_PCI_SWAP_DC_2H          LANE SWAP control for Stack0
                                                       3      TC_PCI_SWAP_DC_3H          LANE SWAP control for Stack0
                                                       4      TC_PCI_SWAP_DC_4H          LANE SWAP control for Stack0

                                                       8      TC_PCI_IOVALID_DC_8H       IOVALID control for Stack0
                                                       9      TC_PCI_IOVALID_DC_9H       IOVALID control for Stack1
                                                       10     TC_PCI_IOVALID_DC_10H      IOVALID control for Stack2

    </description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0x00, ENABLE = 0x01</enum>
    <array>3</array>
    <default>ENABLE,ENABLE,ENABLE</default>
    <platInit/>
    <persistRuntime/>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_LANE_REVERSAL</id>
    <targetType>TARGET_TYPE_PEC</targetType>
    <description>
      This attribute controls the latches required to configure the PHBs to swap its lanes if wiring to the connector/device is straight or reverse.
      creator: platform
      consumer: p10_pcie_scominit
      firmware notes:
        These are config dependent attributes based on PCIe Lane/sideband signal routing and PCIe endpoints attached.

       Attribute Name                  Definition                 Example    Comments                        Targeted HWP Attributes
       ATTR_PROC_PCIE_LANE_REVERSAL    (Stack0, Stack1, Stack2)   (1, 0, 0)  Reverse lanes on PHB0.          TC_PCI_LANE_CFG_DC_2H
                                                                             Do not reverse lanes on PHB1.   TC_PCI_LANE_CFG_DC_3H
                                                                             Do not reverse lanes on PHB2.   TC_PCI_LANE_CFG_DC_4H

       Register Address      Register Name             Bit    Signal Name                Bit Description
       8000009 / 9000009     TPPCI.PCI.CPLT_CONF1      0      TC_PCI_LANE_CFG_DC_0H      MSB for  LANE CFG  in the logic that configures x16, x8x8, x8x4x4
                                                       1      TC_PCI_LANE_CFG_DC_1H      LSB for LANE CFG  in the logic that configures x16, x8x8, x8x4x4

                                                       2      TC_PCI_SWAP_DC_2H          LANE SWAP control for Stack0
                                                       3      TC_PCI_SWAP_DC_3H          LANE SWAP control for Stack0
                                                       4      TC_PCI_SWAP_DC_4H          LANE SWAP control for Stack0

                                                       8      TC_PCI_IOVALID_DC_8H       IOVALID control for Stack0
                                                       9      TC_PCI_IOVALID_DC_9H       IOVALID control for Stack1
                                                       10     TC_PCI_IOVALID_DC_10H      IOVALID control for Stack2

    </description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0x00, ENABLE = 0x01</enum>
    <array>3</array>
    <default>DISABLE,DISABLE,DISABLE</default>
    <platInit/>
    <persistRuntime/>
    <writeable/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_BAR_ENABLE</id>
    <targetType>TARGET_TYPE_PHB</targetType>
    <description>
      PCIE MMIO BAR enable
      creator: platform
      consumer: p10_pcie_config
      firmware notes:
        Array index: BAR number (0:2)
        index 0~1 for MMIO BAR0/1
        index 2 for PHB register space
    </description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0x0, ENABLE = 0x1</enum>
    <array>3</array>
    <platInit/>
    <persistRuntime/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_MMIO_BAR0_BASE_ADDR_OFFSET</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
      PCIE MMIO0 BAR base address offset
      creator: platform
      consumer: p10_setup_bars
      firmware notes:
        Attribute holds offset (relative to chip MMIO origin) to program into
        chip address range field of BAR -- RA bits 8:47
        (excludes system/memory select/group/chip fields)
        Array index: PHB number (0:5)
    </description>
    <valueType>uint64</valueType>
    <array>6</array>
    <platInit/>
    <persistRuntime/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_MMIO_BAR1_BASE_ADDR_OFFSET</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
      PCIE MMIO1 BAR base address offset
      creator: platform
      consumer: p10_setup_bars
      firmware notes:
        Attribute holds offset (relative to chip MMIO origin) to program into
        chip address range field of BAR -- RA bits 8:47
        (excludes system/memory select/group/chip fields)
        Array index: PHB number (0:5)
    </description>
    <valueType>uint64</valueType>
    <array>6</array>
    <platInit/>
    <persistRuntime/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_PHB_REGISTER_BASE_ADDR_OFFSET</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
      PCIE PHB register space BAR base address offset
      creator: platform
      consumer: p10_setup_bars
      firmware notes:
        Attribute holds offset (relative to chip MMIO origin) to program into
        chip address range field of BAR -- RA bits 8:49
        (excludes system/memory select/group/chip fields)
        Array index: PHB number (0:5)
    </description>
    <valueType>uint64</valueType>
    <array>6</array>
    <platInit/>
    <persistRuntime/>
  </attribute>
  <!-- ********************************************************************* -->
  <attribute>
    <id>ATTR_PROC_PCIE_BAR_SIZE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
      PCIE MMIO BAR size values
      creator: platform
      consumer: p10_pcie_config
      firmware notes:
        Array index: BAR number (0:2)
        NOTE: supported MMIO BAR0/1 sizes are from 64KB-32PB
        NOTE: only supported PHB register size is 16KB
    </description>
    <valueType>uint64</valueType>
    <enum>
       32_PB = 0x8000000000000000,
       16_PB = 0xC000000000000000,
        8_PB = 0xE000000000000000,
        4_PB = 0xF000000000000000,
        2_PB = 0xF800000000000000,
        1_PB = 0xFC00000000000000,
      512_TB = 0xFE00000000000000,
      256_TB = 0xFF00000000000000,
      128_TB = 0xFF80000000000000,
       64_TB = 0xFFC0000000000000,
       32_TB = 0xFFE0000000000000,
       16_TB = 0xFFF0000000000000,
        8_TB = 0xFFF8000000000000,
        4_TB = 0xFFFC000000000000,
        2_TB = 0xFFFE000000000000,
        1_TB = 0xFFFF000000000000,
      512_GB = 0xFFFF800000000000,
      256_GB = 0xFFFFC00000000000,
      128_GB = 0xFFFFE00000000000,
       64_GB = 0xFFFFF00000000000,
       32_GB = 0xFFFFF80000000000,
       16_GB = 0xFFFFFC0000000000,
        8_GB = 0xFFFFFE0000000000,
        4_GB = 0xFFFFFF0000000000,
        2_GB = 0xFFFFFF8000000000,
        1_GB = 0xFFFFFFC000000000,
      512_MB = 0xFFFFFFE000000000,
      256_MB = 0xFFFFFFF000000000,
      128_MB = 0xFFFFFFF800000000,
       64_MB = 0xFFFFFFFC00000000,
       32_MB = 0xFFFFFFFE00000000,
       16_MB = 0xFFFFFFFF00000000,
        8_MB = 0xFFFFFFFF80000000,
        4_MB = 0xFFFFFFFFC0000000,
        2_MB = 0xFFFFFFFFE0000000,
        1_MB = 0xFFFFFFFFF0000000,
      512_KB = 0xFFFFFFFFF8000000,
      256_KB = 0xFFFFFFFFFC000000,
      128_KB = 0xFFFFFFFFFE000000,
       64_KB = 0xFFFFFFFFFF000000,
       16_KB = 0xFFFFFFFFFFFFFFFF
    </enum>
    <array>3</array>
    <platInit/>
    <persistRuntime/>
  </attribute>
</attributes>
