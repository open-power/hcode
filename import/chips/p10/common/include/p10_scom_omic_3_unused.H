/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: import/chips/p10/common/include/p10_scom_omic_3_unused.H $    */
/*                                                                        */
/* OpenPOWER EKB Project                                                  */
/*                                                                        */
/* COPYRIGHT 2019,2021                                                    */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_omic_3_H_UNUSED__
#define __p10_scom_omic_3_H_UNUSED__


#ifndef __PPE_HCODE__
namespace scomt
{
namespace omic
{
#endif


//>> [CTL_REGS_RX_MODE17_PG]
static const uint64_t CTL_REGS_RX_MODE17_PG = 0x8008884010012c3full;

static const uint32_t CTL_REGS_RX_MODE17_PG_INC_DEC_AMT2 = 48;
static const uint32_t CTL_REGS_RX_MODE17_PG_INC_DEC_AMT2_LEN = 3;
static const uint32_t CTL_REGS_RX_MODE17_PG_THRESH3 = 51;
static const uint32_t CTL_REGS_RX_MODE17_PG_THRESH3_LEN = 5;
static const uint32_t CTL_REGS_RX_MODE17_PG_INC_DEC_AMT3 = 56;
static const uint32_t CTL_REGS_RX_MODE17_PG_INC_DEC_AMT3_LEN = 3;
static const uint32_t CTL_REGS_RX_MODE17_PG_THRESH4 = 59;
static const uint32_t CTL_REGS_RX_MODE17_PG_THRESH4_LEN = 5;
//<< [CTL_REGS_RX_MODE17_PG]
// omic/reg00003.H

//>> [CTL_REGS_RX_MODE2_PG]
static const uint64_t CTL_REGS_RX_MODE2_PG = 0x8008104010012c3full;

static const uint32_t CTL_REGS_RX_MODE2_PG_SCOPE_MODE_ENABLE = 48;
static const uint32_t CTL_REGS_RX_MODE2_PG_SCOPE_MODE_PIPE_SKIP_COUNT = 49;
static const uint32_t CTL_REGS_RX_MODE2_PG_SCOPE_MODE_PIPE_SKIP_COUNT_LEN = 4;
static const uint32_t CTL_REGS_RX_MODE2_PG_SCOPE_MODE_SAMPLE_MASK = 53;
static const uint32_t CTL_REGS_RX_MODE2_PG_SCOPE_MODE_SAMPLE_MASK_LEN = 7;
static const uint32_t CTL_REGS_RX_MODE2_PG_DATA_PIPE_CLR_ON_READ_MODE = 60;
//<< [CTL_REGS_RX_MODE2_PG]
// omic/reg00003.H

//>> [DATASM_REGS_RX_CNT15_PG]
static const uint64_t DATASM_REGS_RX_CNT15_PG = 0x8009f84010012c3full;

static const uint32_t DATASM_REGS_RX_CNT15_PG_RX_PSAVE_FW_VAL3_SEL = 48;
static const uint32_t DATASM_REGS_RX_CNT15_PG_RX_PSAVE_FW_VAL3_SEL_LEN = 5;
//<< [DATASM_REGS_RX_CNT15_PG]
// omic/reg00003.H

//>> [DATASM_REGS_RX_CNT25_PG]
static const uint64_t DATASM_REGS_RX_CNT25_PG = 0x800a484010012c3full;

static const uint32_t DATASM_REGS_RX_CNT25_PG_RX_B_LANE_FAIL_0_15 = 48;
static const uint32_t DATASM_REGS_RX_CNT25_PG_RX_B_LANE_FAIL_0_15_LEN = 16;
//<< [DATASM_REGS_RX_CNT25_PG]
// omic/reg00003.H

//>> [DATASM_REGS_RX_CNTL6_PG]
static const uint64_t DATASM_REGS_RX_CNTL6_PG = 0x8009b04010012c3full;

static const uint32_t DATASM_REGS_RX_CNTL6_PG_RX_PSAVE_FENCE_REQ_DL_IO_16_23 = 48;
static const uint32_t DATASM_REGS_RX_CNTL6_PG_RX_PSAVE_FENCE_REQ_DL_IO_16_23_LEN = 8;
//<< [DATASM_REGS_RX_CNTL6_PG]
// omic/reg00003.H

//>> [DATASM_REGS_RX_STAT18_PG]
static const uint64_t DATASM_REGS_RX_STAT18_PG = 0x800b184010012c3full;

static const uint32_t DATASM_REGS_RX_STAT18_PG_RX_LOFF_HYST_MIN_RO_SIGNAL = 48;
static const uint32_t DATASM_REGS_RX_STAT18_PG_RX_LOFF_HYST_MIN_RO_SIGNAL_LEN = 8;
//<< [DATASM_REGS_RX_STAT18_PG]
// omic/reg00003.H

//>> [DATASM_REGS_RX_STAT28_PG]
static const uint64_t DATASM_REGS_RX_STAT28_PG = 0x800b684010012c3full;

static const uint32_t DATASM_REGS_RX_STAT28_PG_RX_QPA_VOTE_DIFF_RO_SIGNAL = 48;
static const uint32_t DATASM_REGS_RX_STAT28_PG_RX_QPA_VOTE_DIFF_RO_SIGNAL_LEN = 11;
//<< [DATASM_REGS_RX_STAT28_PG]
// omic/reg00003.H

//>> [DATASM_REGS_RX_STAT6_PG]
static const uint64_t DATASM_REGS_RX_STAT6_PG = 0x800ab84010012c3full;

static const uint32_t DATASM_REGS_RX_STAT6_PG_RX_SERVO_STATUS0_RO_SIGNAL = 48;
static const uint32_t DATASM_REGS_RX_STAT6_PG_RX_SERVO_STATUS0_RO_SIGNAL_LEN = 16;
//<< [DATASM_REGS_RX_STAT6_PG]
// omic/reg00003.H

//>> [TX_CTL_SM_REGS_CTLSM_CNTL14_PG]
static const uint64_t TX_CTL_SM_REGS_CTLSM_CNTL14_PG = 0x800d2c4010012c3full;

static const uint32_t TX_CTL_SM_REGS_CTLSM_CNTL14_PG_TX_PSAVE_FORCE_REQ_16_23_1 = 48;
static const uint32_t TX_CTL_SM_REGS_CTLSM_CNTL14_PG_TX_PSAVE_FORCE_REQ_16_23_1_LEN = 8;
//<< [TX_CTL_SM_REGS_CTLSM_CNTL14_PG]
// omic/reg00003.H

//>> [TX_CTL_SM_REGS_CTLSM_CNTL4_PG]
static const uint64_t TX_CTL_SM_REGS_CTLSM_CNTL4_PG = 0x800cdc4010012c3full;

static const uint32_t TX_CTL_SM_REGS_CTLSM_CNTL4_PG_TX_PSAVE_FENCE_STS_IO_DL_16_23 = 48;
static const uint32_t TX_CTL_SM_REGS_CTLSM_CNTL4_PG_TX_PSAVE_FENCE_STS_IO_DL_16_23_LEN = 8;
//<< [TX_CTL_SM_REGS_CTLSM_CNTL4_PG]
// omic/reg00003.H

//>> [TX_CTL_SM_REGS_CTLSM_STAT4_PG]
static const uint64_t TX_CTL_SM_REGS_CTLSM_STAT4_PG = 0x800d5c4010012c3full;

static const uint32_t TX_CTL_SM_REGS_CTLSM_STAT4_PG_TX_PSAVE_STS_PHY_0_15_RO_SIGNAL = 48;
static const uint32_t TX_CTL_SM_REGS_CTLSM_STAT4_PG_TX_PSAVE_STS_PHY_0_15_RO_SIGNAL_LEN = 16;
//<< [TX_CTL_SM_REGS_CTLSM_STAT4_PG]
// omic/reg00003.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "omic/reg00003_unused.H"
#endif
#endif
