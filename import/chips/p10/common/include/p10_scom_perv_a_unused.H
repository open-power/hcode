/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: import/chips/p10/common/include/p10_scom_perv_a_unused.H $    */
/*                                                                        */
/* OpenPOWER EKB Project                                                  */
/*                                                                        */
/* COPYRIGHT 2019,2020                                                    */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_perv_a_H_UNUSED__
#define __p10_scom_perv_a_H_UNUSED__


#ifndef __PPE_HCODE__
namespace scomt
{
namespace perv
{
#endif


//>> [CC_PROTECT_MODE_REG]
static const uint64_t CC_PROTECT_MODE_REG = 0x000303feull;

static const uint32_t CC_PROTECT_MODE_REG_READ_PROTECT_ENABLE = 0;
static const uint32_t CC_PROTECT_MODE_REG_WRITE_PROTECT_ENABLE = 1;
//<< [CC_PROTECT_MODE_REG]
// perv/reg00020.H

//>> [CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT]
static const uint64_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT = 0x00018319ull;

static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_MEASURE_HIST_VAL1 = 0;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_MEASURE_HIST_VAL1_LEN = 8;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_INTERVAL_Q = 9;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_INTERVAL_Q_LEN = 7;
// ERROR Duplicate Dial         static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_INTERVAL_Q = 9;
// ERROR Duplicate Dial         static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_INTERVAL_Q_LEN = 7;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_DCADJ_DCS_SEL_INT = 17;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_DCADJ_DCS_SEL_INT_LEN = 7;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_TARGET_VALUE = 25;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT_TARGET_VALUE_LEN = 7;
//<< [CLK_ADJ_00_DCADJ_WRAP_AVERAGE_MEASUREMENT]
// perv/reg00020.H

//>> [CLK_ADJ_00_DCADJ_WRAP_SET_COMP_DLY]
static const uint64_t CLK_ADJ_00_DCADJ_WRAP_SET_COMP_DLY = 0x0001830bull;

static const uint32_t CLK_ADJ_00_DCADJ_WRAP_SET_COMP_DLY_COMP_DELAY_VALUE = 0;
static const uint32_t CLK_ADJ_00_DCADJ_WRAP_SET_COMP_DLY_COMP_DELAY_VALUE_LEN = 16;
//<< [CLK_ADJ_00_DCADJ_WRAP_SET_COMP_DLY]
// perv/reg00020.H

//>> [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INIT_MODE]
static const uint64_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INIT_MODE = 0x00018320ull;
//<< [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INIT_MODE]
// perv/reg00020.H

//>> [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INVERT_CACHE_PDLYS]
static const uint64_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INVERT_CACHE_PDLYS = 0x0001832dull;

static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INVERT_CACHE_PDLYS_CACHE_PDLYS_INVERT = 0;
//<< [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_INVERT_CACHE_PDLYS]
// perv/reg00020.H

//>> [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SOFT_RESET]
static const uint64_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SOFT_RESET = 0x00018325ull;
//<< [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SOFT_RESET]
// perv/reg00020.H

//>> [CLK_ADJ_01_DCADJ_WRAP_SET_LOW_PASS_DLY]
static const uint64_t CLK_ADJ_01_DCADJ_WRAP_SET_LOW_PASS_DLY = 0x00014309ull;

static const uint32_t CLK_ADJ_01_DCADJ_WRAP_SET_LOW_PASS_DLY_LOW_PASS_DELAY_VALUE = 0;
static const uint32_t CLK_ADJ_01_DCADJ_WRAP_SET_LOW_PASS_DLY_LOW_PASS_DELAY_VALUE_LEN = 16;
//<< [CLK_ADJ_01_DCADJ_WRAP_SET_LOW_PASS_DLY]
// perv/reg00020.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES = 0x00012337ull;

static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_STATE = 0;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_STATE_LEN = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_0 = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_0_LEN = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_1 = 8;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_1_LEN = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_2 = 12;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_2_LEN = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_3 = 16;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES_FMS_HIST_3_LEN = 4;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_INC_DEC_FSM_STATES]
// perv/reg00020.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_IGNORE_CNT]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_IGNORE_CNT = 0x00012329ull;

static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_IGNORE_CNT_IGNORE_CNT_VALUE = 0;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_IGNORE_CNT_IGNORE_CNT_VALUE_LEN = 3;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_IGNORE_CNT]
// perv/reg00020.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SOFT_RESET]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SOFT_RESET = 0x00012325ull;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SOFT_RESET]
// perv/reg00020.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES = 0x00012338ull;

static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CORE_SYNC_DONE_STATE = 2;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CORE_SYNC_DONE_STATE_LEN = 2;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CACHE_SYNC_DONE_STATE = 6;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CACHE_SYNC_DONE_STATE_LEN = 2;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CORE_ENABLE = 10;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CORE_SYNC_DONE = 11;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CACHE_ENABLE = 14;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CACHE_SYNC_DONE = 15;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CORE_PDLY_ERR = 18;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_CACHE_PDLY_ERR = 19;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_HOLD_MODE_ACTIVE = 20;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_ADJUST_MODE_ACTIVE = 21;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_SINGLE_STEP_MODE_ACTIVE = 22;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_INIT_MODE_ACTIVE = 23;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_ONE_SHOT_MODE_ACTIVE = 26;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_ONE_SHOT_ADJUSTED = 27;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES_SKEW_ADJ_ACTIVE = 31;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SYNC_DONE_FSM_STATES]
// perv/reg00020.H

//>> [CLK_ADJ_03_DCADJ_WRAP_SET_DCC_TARGET]
static const uint64_t CLK_ADJ_03_DCADJ_WRAP_SET_DCC_TARGET = 0x00011308ull;

static const uint32_t CLK_ADJ_03_DCADJ_WRAP_SET_DCC_TARGET_TARGET_VALUE = 0;
static const uint32_t CLK_ADJ_03_DCADJ_WRAP_SET_DCC_TARGET_TARGET_VALUE_LEN = 7;
//<< [CLK_ADJ_03_DCADJ_WRAP_SET_DCC_TARGET]
// perv/reg00020.H

//>> [CLK_ADJ_03_DCADJ_WRAP_SET_INIT_MODE]
static const uint64_t CLK_ADJ_03_DCADJ_WRAP_SET_INIT_MODE = 0x00011300ull;
//<< [CLK_ADJ_03_DCADJ_WRAP_SET_INIT_MODE]
// perv/reg00020.H

//>> [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA]
static const uint64_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA = 0x00011339ull;

static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ORE_IS_LATE = 3;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ORE_IS_LATE_HIST = 4;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ORE_IS_LATE_HIST_LEN = 4;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ACHE_IS_LATE = 11;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ACHE_IS_LATE_HIST = 12;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ACHE_IS_LATE_HIST_LEN = 4;
//<< [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SENSOR_DATA]
// perv/reg00020.H

//>> [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_OVERRIDE_CORE_SYNC_ENABLE]
static const uint64_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_OVERRIDE_CORE_SYNC_ENABLE = 0x00011330ull;

static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_OVERRIDE_CORE_SYNC_ENABLE_ENABLE_OVERRIDE = 0;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_OVERRIDE_CORE_SYNC_ENABLE_VALUE_OVERRIDE = 1;
//<< [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_OVERRIDE_CORE_SYNC_ENABLE]
// perv/reg00020.H

//>> [P10_20_EPS_DBG_INST1_COND_REG_1]
static const uint64_t EPS_DBG_INST1_COND_REG_1 = 0x000107c1ull; // p10:20,

static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND1_SEL_A = 0;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND1_SEL_A_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND1_SEL_B = 8;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND1_SEL_B_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND2_SEL_A = 16;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND2_SEL_A_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND2_SEL_B = 24;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND2_SEL_B_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_C1_INAROW_MODE = 32;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_AND_TRIGGER_MODE1 = 33;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_NOT_TRIGGER_MODE1 = 34;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_EDGE_TRIGGER_MODE1 = 35;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_C2_INAROW_MODE = 39;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_AND_TRIGGER_MODE2 = 40;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_NOT_TRIGGER_MODE2 = 41;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_EDGE_TRIGGER_MODE2 = 42;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_COND3_ENABLE_RESET = 46;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_EXACT_TO_MODE = 47;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_RESET_C2TIMER_ON_C1 = 48;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_RESET_C3_ON_C0 = 49;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_SLOW_TO_MODE = 50;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_EXACT_RESET_C3_ON_TO = 51;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_C1_COUNT_LT = 52;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_C1_COUNT_LT_LEN = 4;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_C2_COUNT_LT = 56;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_C2_COUNT_LT_LEN = 4;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_RESET_C3_SELECT = 60;
static const uint32_t P10_20_EPS_DBG_INST1_COND_REG_1_RESET_C3_SELECT_LEN = 3;
//<< [P10_20_EPS_DBG_INST1_COND_REG_1]
// perv/reg00020.H

//>> [P10_20_EPS_DBG_INST2_COND_REG_1]
static const uint64_t EPS_DBG_INST2_COND_REG_1 = 0x000107c4ull; // p10:20,

static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND1_SEL_A = 0;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND1_SEL_A_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND1_SEL_B = 8;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND1_SEL_B_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND2_SEL_A = 16;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND2_SEL_A_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND2_SEL_B = 24;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND2_SEL_B_LEN = 8;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_C1_INAROW_MODE = 32;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_AND_TRIGGER_MODE1 = 33;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_NOT_TRIGGER_MODE1 = 34;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_EDGE_TRIGGER_MODE1 = 35;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_C2_INAROW_MODE = 39;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_AND_TRIGGER_MODE2 = 40;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_NOT_TRIGGER_MODE2 = 41;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_EDGE_TRIGGER_MODE2 = 42;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_COND3_ENABLE_RESET = 46;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_EXACT_TO_MODE = 47;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_RESET_C2TIMER_ON_C1 = 48;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_RESET_C3_ON_C0 = 49;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_SLOW_TO_MODE = 50;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_EXACT_RESET_C3_ON_TO = 51;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_C1_COUNT_LT = 52;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_C1_COUNT_LT_LEN = 4;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_C2_COUNT_LT = 56;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_C2_COUNT_LT_LEN = 4;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_RESET_C3_SELECT = 60;
static const uint32_t P10_20_EPS_DBG_INST2_COND_REG_1_RESET_C3_SELECT_LEN = 3;
//<< [P10_20_EPS_DBG_INST2_COND_REG_1]
// perv/reg00020.H

//>> [EPS_FIR_CLKSTOP_ON_XSTOP_MASK4]
static const uint64_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4 = 0x00040084ull;

static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_XSTOP_ERR = 0;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_RECOV_ERR = 1;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_SPATTN_ERR = 2;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_LXSTOP_ERR = 3;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_HOSTATTN_ERR = 4;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_SYS_XSTOP_ERR = 5;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_SYS_XSTOP_STAGED_ERR = 6;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_DBG_TRIG_ERR = 7;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP01 = 12;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP02 = 13;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP03 = 14;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP04 = 15;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP05 = 16;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP06 = 17;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP07 = 18;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP08 = 19;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP09 = 20;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP10 = 21;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP11 = 22;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP12 = 23;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP13 = 24;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP14 = 25;
static const uint32_t EPS_FIR_CLKSTOP_ON_XSTOP_MASK4_UNIT_TC_FIR_LOCAL_XSTOP15 = 26;
//<< [EPS_FIR_CLKSTOP_ON_XSTOP_MASK4]
// perv/reg00020.H

//>> [EPS_PSC_ATOMIC_LOCK_MASK_LATCH_REG]
static const uint64_t EPS_PSC_ATOMIC_LOCK_MASK_LATCH_REG = 0x00010007ull;

static const uint32_t EPS_PSC_ATOMIC_LOCK_MASK_LATCH_REG_ATOMIC_LOCK_MASK = 0;
static const uint32_t EPS_PSC_ATOMIC_LOCK_MASK_LATCH_REG_ATOMIC_LOCK_MASK_LEN = 32;
//<< [EPS_PSC_ATOMIC_LOCK_MASK_LATCH_REG]
// perv/reg00020.H

//>> [FSXCOMP_FSXLOG_M1B_DATA_AREA_15]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_15_FSI = 0x0000288full;
static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_15_FSI_BYTE = 0x00002a3cull;
static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_15_RO = 0x0005008full;

static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_15_MDA_M1B_DATA_AREA_15 = 0;
static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_15_MDA_M1B_DATA_AREA_15_LEN = 32;
//<< [FSXCOMP_FSXLOG_M1B_DATA_AREA_15]
// perv/reg00020.H

//>> [FSXCOMP_FSXLOG_M1B_DATA_AREA_4]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_4_FSI = 0x00002884ull;
static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_4_FSI_BYTE = 0x00002a10ull;
static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_4_RO = 0x00050084ull;

static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_4_MDA_M1B_DATA_AREA_4 = 0;
static const uint32_t FSXCOMP_FSXLOG_M1B_DATA_AREA_4_MDA_M1B_DATA_AREA_4_LEN = 32;
//<< [FSXCOMP_FSXLOG_M1B_DATA_AREA_4]
// perv/reg00020.H

//>> [FSXCOMP_FSXLOG_M2A_DATA_AREA_2]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_2_FSI = 0x000028c2ull;
static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_2_FSI_BYTE = 0x00002b08ull;
static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_2_RW = 0x000500c2ull;

static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_2_MDA_M2A_DATA_AREA_2 = 0;
static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_2_MDA_M2A_DATA_AREA_2_LEN = 32;
//<< [FSXCOMP_FSXLOG_M2A_DATA_AREA_2]
// perv/reg00020.H

//>> [FSXCOMP_FSXLOG_M2B_DATA_AREA_11]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_11_FSI = 0x0000290bull;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_11_FSI_BYTE = 0x00002c2cull;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_11_RO = 0x0005010bull;

static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_11_MDA_M2B_DATA_AREA_11 = 0;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_11_MDA_M2B_DATA_AREA_11_LEN = 32;
//<< [FSXCOMP_FSXLOG_M2B_DATA_AREA_11]
// perv/reg00020.H

//>> [FSXCOMP_FSXLOG_M2B_DATA_AREA_8]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_8_FSI = 0x00002908ull;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_8_FSI_BYTE = 0x00002c20ull;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_8_RO = 0x00050108ull;

static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_8_MDA_M2B_DATA_AREA_8 = 0;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_8_MDA_M2B_DATA_AREA_8_LEN = 32;
//<< [FSXCOMP_FSXLOG_M2B_DATA_AREA_8]
// perv/reg00020.H

//>> [FSXCOMP_FSXLOG_RCS_EL3]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_FSI = 0x00002943ull;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_FSI_BYTE = 0x00002d0cull;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_RO = 0x00050143ull;

static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_SNS = 0;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_SNS_LEN = 17;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_ERR = 17;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_ERR_LEN = 4;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_TIME = 21;
static const uint32_t FSXCOMP_FSXLOG_RCS_EL3_TIME_LEN = 11;
//<< [FSXCOMP_FSXLOG_RCS_EL3]
// perv/reg00020.H

//>> [L3TRA0_TR0_TRACE_HI_DATA_REG]
static const uint64_t L3TRA0_TR0_TRACE_HI_DATA_REG = 0x00018200ull;

static const uint32_t L3TRA0_TR0_TRACE_HI_DATA_REG_TRACE_HI_DATA = 0;
static const uint32_t L3TRA0_TR0_TRACE_HI_DATA_REG_TRACE_HI_DATA_LEN = 64;
//<< [L3TRA0_TR0_TRACE_HI_DATA_REG]
// perv/reg00020.H

//>> [L3TRA1_TR1_CONFIG_1]
static const uint64_t L3TRA1_TR1_CONFIG_1 = 0x00018264ull;

static const uint32_t L3TRA1_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t L3TRA1_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [L3TRA1_TR1_CONFIG_1]
// perv/reg00020.H

//>> [L3TRA3_TR0_CONFIG_0]
static const uint64_t L3TRA3_TR0_CONFIG_0 = 0x000182c3ull;

static const uint32_t L3TRA3_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63 = 0;
static const uint32_t L3TRA3_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63_LEN = 64;
//<< [L3TRA3_TR0_CONFIG_0]
// perv/reg00020.H

//>> [L3TRA3_TR1_CONFIG_9]
static const uint64_t L3TRA3_TR1_CONFIG_9 = 0x000182e9ull;

static const uint32_t L3TRA3_TR1_CONFIG_9_DISABLE_COMPRESSION = 0;
static const uint32_t L3TRA3_TR1_CONFIG_9_ERROR_BIT_COMPRESSION_CARE_MASK = 1;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHA_MUXSEL = 2;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHA_MUXSEL_LEN = 2;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHB_MUXSEL = 4;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHB_MUXSEL_LEN = 2;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHC_MUXSEL = 6;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHC_MUXSEL_LEN = 2;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHD_MUXSEL = 8;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCHD_MUXSEL_LEN = 2;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG0_OR_MASK = 10;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG0_OR_MASK_LEN = 4;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG0_AND_MASK = 14;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG0_AND_MASK_LEN = 4;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG1_OR_MASK = 18;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG1_OR_MASK_LEN = 4;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG1_AND_MASK = 22;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG1_AND_MASK_LEN = 4;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG0_NOT_MODE = 26;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG1_NOT_MODE = 27;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCH_NOT_MODE = 28;
static const uint32_t L3TRA3_TR1_CONFIG_9_MATCH_NOT_MODE_LEN = 4;
static const uint32_t L3TRA3_TR1_CONFIG_9_ERROR_CMP_MASK = 32;
static const uint32_t L3TRA3_TR1_CONFIG_9_ERROR_CMP_PATTERN = 33;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG0_ERR_CMP = 34;
static const uint32_t L3TRA3_TR1_CONFIG_9_TRIG1_ERR_CMP = 35;
static const uint32_t L3TRA3_TR1_CONFIG_9_DD1_STRETCH_TRIGGER_PULSES = 36;
static const uint32_t L3TRA3_TR1_CONFIG_9_SPARE_LT = 37;
//<< [L3TRA3_TR1_CONFIG_9]
// perv/reg00020.H

//>> [L3TRA3_TR1_TRACE_LO_DATA_REG]
static const uint64_t L3TRA3_TR1_TRACE_LO_DATA_REG = 0x000182e1ull;

static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_LO_DATA = 0;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_LO_DATA_LEN = 32;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_ADDRESS = 32;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_ADDRESS_LEN = 10;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_LAST_BANK = 42;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_LAST_BANK_LEN = 9;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_LAST_BANK_VALID = 51;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_WRITE_ON_RUN = 52;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_RUNNING = 53;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_HOLD_ADDRESS = 54;
static const uint32_t L3TRA3_TR1_TRACE_LO_DATA_REG_HOLD_ADDRESS_LEN = 10;
//<< [L3TRA3_TR1_TRACE_LO_DATA_REG]
// perv/reg00020.H

//>> [P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B]
static const uint64_t OTPC_M_I2CM_SLVID_CONFIG_REG_B = 0x00010020ull; // p10:20,

static const uint32_t P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B_PORT_PROTECTION_B = 0;
static const uint32_t P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B_PORT_PROTECTION_B_LEN = 18;
static const uint32_t P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B_SLV_ID_B = 18;
static const uint32_t P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B_SLV_ID_B_LEN = 7;
static const uint32_t P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B_MASK_ID_B = 25;
static const uint32_t P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B_MASK_ID_B_LEN = 7;
//<< [P10_20_OTPC_M_I2CM_SLVID_CONFIG_REG_B]
// perv/reg00020.H

//>> [OTPC_M_MEASURE_REG15]
static const uint64_t OTPC_M_MEASURE_REG15 = 0x0001001full;

static const uint32_t OTPC_M_MEASURE_REG15_SEEPROM_MEASUREMENT15_DATA = 0;
static const uint32_t OTPC_M_MEASURE_REG15_SEEPROM_MEASUREMENT15_DATA_LEN = 64;
//<< [OTPC_M_MEASURE_REG15]
// perv/reg00020.H

//>> [REC_ERR_MST2_REG0]
static const uint64_t REC_ERR_MST2_REG0 = 0x000f0048ull;

static const uint32_t REC_ERR_MST2_REG0_MASTER_MST2_RESPONSE_BIT = 0;
static const uint32_t REC_ERR_MST2_REG0_MASTER_MST2_ERROR_CODE = 1;
static const uint32_t REC_ERR_MST2_REG0_MASTER_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE1_MST2_RESPONSE_BIT = 4;
static const uint32_t REC_ERR_MST2_REG0_SLAVE1_MST2_ERROR_CODE = 5;
static const uint32_t REC_ERR_MST2_REG0_SLAVE1_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE2_MST2_RESPONSE_BIT = 8;
static const uint32_t REC_ERR_MST2_REG0_SLAVE2_MST2_ERROR_CODE = 9;
static const uint32_t REC_ERR_MST2_REG0_SLAVE2_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE3_MST2_RESPONSE_BIT = 12;
static const uint32_t REC_ERR_MST2_REG0_SLAVE3_MST2_ERROR_CODE = 13;
static const uint32_t REC_ERR_MST2_REG0_SLAVE3_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE4_MST2_RESPONSE_BIT = 16;
static const uint32_t REC_ERR_MST2_REG0_SLAVE4_MST2_ERROR_CODE = 17;
static const uint32_t REC_ERR_MST2_REG0_SLAVE4_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE5_MST2_RESPONSE_BIT = 20;
static const uint32_t REC_ERR_MST2_REG0_SLAVE5_MST2_ERROR_CODE = 21;
static const uint32_t REC_ERR_MST2_REG0_SLAVE5_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE6_MST2_RESPONSE_BIT = 24;
static const uint32_t REC_ERR_MST2_REG0_SLAVE6_MST2_ERROR_CODE = 25;
static const uint32_t REC_ERR_MST2_REG0_SLAVE6_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE7_MST2_RESPONSE_BIT = 28;
static const uint32_t REC_ERR_MST2_REG0_SLAVE7_MST2_ERROR_CODE = 29;
static const uint32_t REC_ERR_MST2_REG0_SLAVE7_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE8_MST2_RESPONSE_BIT = 32;
static const uint32_t REC_ERR_MST2_REG0_SLAVE8_MST2_ERROR_CODE = 33;
static const uint32_t REC_ERR_MST2_REG0_SLAVE8_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE9_MST2_RESPONSE_BIT = 36;
static const uint32_t REC_ERR_MST2_REG0_SLAVE9_MST2_ERROR_CODE = 37;
static const uint32_t REC_ERR_MST2_REG0_SLAVE9_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE10_MST2_RESPONSE_BIT = 40;
static const uint32_t REC_ERR_MST2_REG0_SLAVE10_MST2_ERROR_CODE = 41;
static const uint32_t REC_ERR_MST2_REG0_SLAVE10_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE11_MST2_RESPONSE_BIT = 44;
static const uint32_t REC_ERR_MST2_REG0_SLAVE11_MST2_ERROR_CODE = 45;
static const uint32_t REC_ERR_MST2_REG0_SLAVE11_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE12_MST2_RESPONSE_BIT = 48;
static const uint32_t REC_ERR_MST2_REG0_SLAVE12_MST2_ERROR_CODE = 49;
static const uint32_t REC_ERR_MST2_REG0_SLAVE12_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE13_MST2_RESPONSE_BIT = 52;
static const uint32_t REC_ERR_MST2_REG0_SLAVE13_MST2_ERROR_CODE = 53;
static const uint32_t REC_ERR_MST2_REG0_SLAVE13_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE14_MST2_RESPONSE_BIT = 56;
static const uint32_t REC_ERR_MST2_REG0_SLAVE14_MST2_ERROR_CODE = 57;
static const uint32_t REC_ERR_MST2_REG0_SLAVE14_MST2_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST2_REG0_SLAVE15_MST2_RESPONSE_BIT = 60;
static const uint32_t REC_ERR_MST2_REG0_SLAVE15_MST2_ERROR_CODE = 61;
static const uint32_t REC_ERR_MST2_REG0_SLAVE15_MST2_ERROR_CODE_LEN = 3;
//<< [REC_ERR_MST2_REG0]
// perv/reg00020.H

//>> [REC_ERR_MST6_REG1]
static const uint64_t REC_ERR_MST6_REG1 = 0x000f0059ull;

static const uint32_t REC_ERR_MST6_REG1_16_MST6_RESPONSE_BIT = 0;
static const uint32_t REC_ERR_MST6_REG1_16_MST6_ERROR_CODE = 1;
static const uint32_t REC_ERR_MST6_REG1_16_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_17_MST6_RESPONSE_BIT = 4;
static const uint32_t REC_ERR_MST6_REG1_17_MST6_ERROR_CODE = 5;
static const uint32_t REC_ERR_MST6_REG1_17_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_18_MST6_RESPONSE_BIT = 8;
static const uint32_t REC_ERR_MST6_REG1_18_MST6_ERROR_CODE = 9;
static const uint32_t REC_ERR_MST6_REG1_18_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_19_MST6_RESPONSE_BIT = 12;
static const uint32_t REC_ERR_MST6_REG1_19_MST6_ERROR_CODE = 13;
static const uint32_t REC_ERR_MST6_REG1_19_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_20_MST6_RESPONSE_BIT = 16;
static const uint32_t REC_ERR_MST6_REG1_20_MST6_ERROR_CODE = 17;
static const uint32_t REC_ERR_MST6_REG1_20_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_21_MST6_RESPONSE_BIT = 20;
static const uint32_t REC_ERR_MST6_REG1_21_MST6_ERROR_CODE = 21;
static const uint32_t REC_ERR_MST6_REG1_21_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_22_MST6_RESPONSE_BIT = 24;
static const uint32_t REC_ERR_MST6_REG1_22_MST6_ERROR_CODE = 25;
static const uint32_t REC_ERR_MST6_REG1_22_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_23_MST6_RESPONSE_BIT = 28;
static const uint32_t REC_ERR_MST6_REG1_23_MST6_ERROR_CODE = 29;
static const uint32_t REC_ERR_MST6_REG1_23_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_24_MST6_RESPONSE_BIT = 32;
static const uint32_t REC_ERR_MST6_REG1_24_MST6_ERROR_CODE = 33;
static const uint32_t REC_ERR_MST6_REG1_24_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_25_MST6_RESPONSE_BIT = 36;
static const uint32_t REC_ERR_MST6_REG1_25_MST6_ERROR_CODE = 37;
static const uint32_t REC_ERR_MST6_REG1_25_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_26_MST6_RESPONSE_BIT = 40;
static const uint32_t REC_ERR_MST6_REG1_26_MST6_ERROR_CODE = 41;
static const uint32_t REC_ERR_MST6_REG1_26_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_27_MST6_RESPONSE_BIT = 44;
static const uint32_t REC_ERR_MST6_REG1_27_MST6_ERROR_CODE = 45;
static const uint32_t REC_ERR_MST6_REG1_27_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_28_MST6_RESPONSE_BIT = 48;
static const uint32_t REC_ERR_MST6_REG1_28_MST6_ERROR_CODE = 49;
static const uint32_t REC_ERR_MST6_REG1_28_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_29_MST6_RESPONSE_BIT = 52;
static const uint32_t REC_ERR_MST6_REG1_29_MST6_ERROR_CODE = 53;
static const uint32_t REC_ERR_MST6_REG1_29_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_30_MST6_RESPONSE_BIT = 56;
static const uint32_t REC_ERR_MST6_REG1_30_MST6_ERROR_CODE = 57;
static const uint32_t REC_ERR_MST6_REG1_30_MST6_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST6_REG1_31_MST6_RESPONSE_BIT = 60;
static const uint32_t REC_ERR_MST6_REG1_31_MST6_ERROR_CODE = 61;
static const uint32_t REC_ERR_MST6_REG1_31_MST6_ERROR_CODE_LEN = 3;
//<< [REC_ERR_MST6_REG1]
// perv/reg00020.H

//>> [REC_ERR_MST8_REG1]
static const uint64_t REC_ERR_MST8_REG1 = 0x000f0061ull;

static const uint32_t REC_ERR_MST8_REG1_16_MST8_RESPONSE_BIT = 0;
static const uint32_t REC_ERR_MST8_REG1_16_MST8_ERROR_CODE = 1;
static const uint32_t REC_ERR_MST8_REG1_16_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_17_MST8_RESPONSE_BIT = 4;
static const uint32_t REC_ERR_MST8_REG1_17_MST8_ERROR_CODE = 5;
static const uint32_t REC_ERR_MST8_REG1_17_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_18_MST8_RESPONSE_BIT = 8;
static const uint32_t REC_ERR_MST8_REG1_18_MST8_ERROR_CODE = 9;
static const uint32_t REC_ERR_MST8_REG1_18_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_19_MST8_RESPONSE_BIT = 12;
static const uint32_t REC_ERR_MST8_REG1_19_MST8_ERROR_CODE = 13;
static const uint32_t REC_ERR_MST8_REG1_19_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_20_MST8_RESPONSE_BIT = 16;
static const uint32_t REC_ERR_MST8_REG1_20_MST8_ERROR_CODE = 17;
static const uint32_t REC_ERR_MST8_REG1_20_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_21_MST8_RESPONSE_BIT = 20;
static const uint32_t REC_ERR_MST8_REG1_21_MST8_ERROR_CODE = 21;
static const uint32_t REC_ERR_MST8_REG1_21_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_22_MST8_RESPONSE_BIT = 24;
static const uint32_t REC_ERR_MST8_REG1_22_MST8_ERROR_CODE = 25;
static const uint32_t REC_ERR_MST8_REG1_22_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_23_MST8_RESPONSE_BIT = 28;
static const uint32_t REC_ERR_MST8_REG1_23_MST8_ERROR_CODE = 29;
static const uint32_t REC_ERR_MST8_REG1_23_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_24_MST8_RESPONSE_BIT = 32;
static const uint32_t REC_ERR_MST8_REG1_24_MST8_ERROR_CODE = 33;
static const uint32_t REC_ERR_MST8_REG1_24_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_25_MST8_RESPONSE_BIT = 36;
static const uint32_t REC_ERR_MST8_REG1_25_MST8_ERROR_CODE = 37;
static const uint32_t REC_ERR_MST8_REG1_25_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_26_MST8_RESPONSE_BIT = 40;
static const uint32_t REC_ERR_MST8_REG1_26_MST8_ERROR_CODE = 41;
static const uint32_t REC_ERR_MST8_REG1_26_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_27_MST8_RESPONSE_BIT = 44;
static const uint32_t REC_ERR_MST8_REG1_27_MST8_ERROR_CODE = 45;
static const uint32_t REC_ERR_MST8_REG1_27_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_28_MST8_RESPONSE_BIT = 48;
static const uint32_t REC_ERR_MST8_REG1_28_MST8_ERROR_CODE = 49;
static const uint32_t REC_ERR_MST8_REG1_28_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_29_MST8_RESPONSE_BIT = 52;
static const uint32_t REC_ERR_MST8_REG1_29_MST8_ERROR_CODE = 53;
static const uint32_t REC_ERR_MST8_REG1_29_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_30_MST8_RESPONSE_BIT = 56;
static const uint32_t REC_ERR_MST8_REG1_30_MST8_ERROR_CODE = 57;
static const uint32_t REC_ERR_MST8_REG1_30_MST8_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST8_REG1_31_MST8_RESPONSE_BIT = 60;
static const uint32_t REC_ERR_MST8_REG1_31_MST8_ERROR_CODE = 61;
static const uint32_t REC_ERR_MST8_REG1_31_MST8_ERROR_CODE_LEN = 3;
//<< [REC_ERR_MST8_REG1]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG113]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG113 = 0x00018071ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG113_REGISTER113 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG113_REGISTER113_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG113]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG124]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG124 = 0x0001807cull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG124_REGISTER124 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG124_REGISTER124_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG124]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG35]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG35 = 0x00018023ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG35_REGISTER35 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG35_REGISTER35_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG35]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG54]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG54 = 0x00018036ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG54_REGISTER54 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG54_REGISTER54_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG54]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG63]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG63 = 0x0001803full;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG63_REGISTER63 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG63_REGISTER63_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG63]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG89]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG89 = 0x00018059ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG89_REGISTER89 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG89_REGISTER89_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG89]
// perv/reg00020.H

//>> [SINGLE_OTP_ROM_OTPROM_REG96]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG96 = 0x00018060ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG96_REGISTER96 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG96_REGISTER96_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG96]
// perv/reg00020.H

//>> [TRA1_TR1_CONFIG_1]
static const uint64_t TRA1_TR1_CONFIG_1 = 0x000104c4ull;

static const uint32_t TRA1_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t TRA1_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [TRA1_TR1_CONFIG_1]
// perv/reg00021.H

//>> [TRA3_TR0_CONFIG_0]
static const uint64_t TRA3_TR0_CONFIG_0 = 0x00010583ull;

static const uint32_t TRA3_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63 = 0;
static const uint32_t TRA3_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63_LEN = 64;
//<< [TRA3_TR0_CONFIG_0]
// perv/reg00021.H

//>> [TRA3_TR1_CONFIG_9]
static const uint64_t TRA3_TR1_CONFIG_9 = 0x000105c9ull;

static const uint32_t TRA3_TR1_CONFIG_9_DISABLE_COMPRESSION = 0;
static const uint32_t TRA3_TR1_CONFIG_9_ERROR_BIT_COMPRESSION_CARE_MASK = 1;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHA_MUXSEL = 2;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHA_MUXSEL_LEN = 2;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHB_MUXSEL = 4;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHB_MUXSEL_LEN = 2;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHC_MUXSEL = 6;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHC_MUXSEL_LEN = 2;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHD_MUXSEL = 8;
static const uint32_t TRA3_TR1_CONFIG_9_MATCHD_MUXSEL_LEN = 2;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG0_OR_MASK = 10;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG0_OR_MASK_LEN = 4;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG0_AND_MASK = 14;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG0_AND_MASK_LEN = 4;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG1_OR_MASK = 18;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG1_OR_MASK_LEN = 4;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG1_AND_MASK = 22;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG1_AND_MASK_LEN = 4;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG0_NOT_MODE = 26;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG1_NOT_MODE = 27;
static const uint32_t TRA3_TR1_CONFIG_9_MATCH_NOT_MODE = 28;
static const uint32_t TRA3_TR1_CONFIG_9_MATCH_NOT_MODE_LEN = 4;
static const uint32_t TRA3_TR1_CONFIG_9_ERROR_CMP_MASK = 32;
static const uint32_t TRA3_TR1_CONFIG_9_ERROR_CMP_PATTERN = 33;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG0_ERR_CMP = 34;
static const uint32_t TRA3_TR1_CONFIG_9_TRIG1_ERR_CMP = 35;
static const uint32_t TRA3_TR1_CONFIG_9_DD1_STRETCH_TRIGGER_PULSES = 36;
static const uint32_t TRA3_TR1_CONFIG_9_SPARE_LT = 37;
//<< [TRA3_TR1_CONFIG_9]
// perv/reg00021.H

//>> [TRA4_TR0_CONFIG_1]
static const uint64_t TRA4_TR0_CONFIG_1 = 0x00010604ull;

static const uint32_t TRA4_TR0_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t TRA4_TR0_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [TRA4_TR0_CONFIG_1]
// perv/reg00021.H

//>> [TRA4_TR1_TRACE_HI_DATA_REG]
static const uint64_t TRA4_TR1_TRACE_HI_DATA_REG = 0x00010640ull;

static const uint32_t TRA4_TR1_TRACE_HI_DATA_REG_TRACE_HI_DATA = 0;
static const uint32_t TRA4_TR1_TRACE_HI_DATA_REG_TRACE_HI_DATA_LEN = 64;
//<< [TRA4_TR1_TRACE_HI_DATA_REG]
// perv/reg00021.H

//>> [TRA6_TR0_CONFIG_9]
static const uint64_t TRA6_TR0_CONFIG_9 = 0x00010709ull;

static const uint32_t TRA6_TR0_CONFIG_9_DISABLE_COMPRESSION = 0;
static const uint32_t TRA6_TR0_CONFIG_9_ERROR_BIT_COMPRESSION_CARE_MASK = 1;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHA_MUXSEL = 2;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHA_MUXSEL_LEN = 2;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHB_MUXSEL = 4;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHB_MUXSEL_LEN = 2;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHC_MUXSEL = 6;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHC_MUXSEL_LEN = 2;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHD_MUXSEL = 8;
static const uint32_t TRA6_TR0_CONFIG_9_MATCHD_MUXSEL_LEN = 2;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG0_OR_MASK = 10;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG0_OR_MASK_LEN = 4;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG0_AND_MASK = 14;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG0_AND_MASK_LEN = 4;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG1_OR_MASK = 18;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG1_OR_MASK_LEN = 4;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG1_AND_MASK = 22;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG1_AND_MASK_LEN = 4;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG0_NOT_MODE = 26;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG1_NOT_MODE = 27;
static const uint32_t TRA6_TR0_CONFIG_9_MATCH_NOT_MODE = 28;
static const uint32_t TRA6_TR0_CONFIG_9_MATCH_NOT_MODE_LEN = 4;
static const uint32_t TRA6_TR0_CONFIG_9_ERROR_CMP_MASK = 32;
static const uint32_t TRA6_TR0_CONFIG_9_ERROR_CMP_PATTERN = 33;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG0_ERR_CMP = 34;
static const uint32_t TRA6_TR0_CONFIG_9_TRIG1_ERR_CMP = 35;
static const uint32_t TRA6_TR0_CONFIG_9_DD1_STRETCH_TRIGGER_PULSES = 36;
static const uint32_t TRA6_TR0_CONFIG_9_SPARE_LT = 37;
//<< [TRA6_TR0_CONFIG_9]
// perv/reg00021.H

//>> [TRA6_TR1_CONFIG_0]
static const uint64_t TRA6_TR1_CONFIG_0 = 0x00010743ull;

static const uint32_t TRA6_TR1_CONFIG_0_CMP_MSK_LT_B_0_TO_63 = 0;
static const uint32_t TRA6_TR1_CONFIG_0_CMP_MSK_LT_B_0_TO_63_LEN = 64;
//<< [TRA6_TR1_CONFIG_0]
// perv/reg00021.H

//>> [TRA7_TR0_TRACE_LO_DATA_REG]
static const uint64_t TRA7_TR0_TRACE_LO_DATA_REG = 0x00010781ull;

static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_LO_DATA = 0;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_LO_DATA_LEN = 32;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_ADDRESS = 32;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_ADDRESS_LEN = 10;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_LAST_BANK = 42;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_LAST_BANK_LEN = 9;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_LAST_BANK_VALID = 51;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_WRITE_ON_RUN = 52;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_RUNNING = 53;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_HOLD_ADDRESS = 54;
static const uint32_t TRA7_TR0_TRACE_LO_DATA_REG_HOLD_ADDRESS_LEN = 10;
//<< [TRA7_TR0_TRACE_LO_DATA_REG]
// perv/reg00021.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "perv/reg00020_unused.H"
#include "perv/reg00021_unused.H"
#endif
#endif
