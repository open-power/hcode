/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: import/chips/p10/common/include/p10_scom_mcc_1_unused.H $     */
/*                                                                        */
/* OpenPOWER EKB Project                                                  */
/*                                                                        */
/* COPYRIGHT 2019,2020                                                    */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_mcc_1_H_UNUSED__
#define __p10_scom_mcc_1_H_UNUSED__


#ifndef __PPE_HCODE__
namespace scomt
{
namespace mcc
{
#endif


//>> [WDF_DSTL_ECC]
static const uint64_t WDF_DSTL_ECC = 0x0c010f45ull;

static const uint32_t WDF_DSTL_ECC_0_ERR_TYPE = 0;
static const uint32_t WDF_DSTL_ECC_0_ERR_TYPE_LEN = 3;
static const uint32_t WDF_DSTL_ECC_0_SYNDROME = 8;
static const uint32_t WDF_DSTL_ECC_0_SYNDROME_LEN = 8;
static const uint32_t WDF_DSTL_ECC_1_ERR_TYPE = 16;
static const uint32_t WDF_DSTL_ECC_1_ERR_TYPE_LEN = 3;
static const uint32_t WDF_DSTL_ECC_1_SYNDROME = 24;
static const uint32_t WDF_DSTL_ECC_1_SYNDROME_LEN = 8;
static const uint32_t WDF_DSTL_ECC_2_ERR_TYPE = 32;
static const uint32_t WDF_DSTL_ECC_2_ERR_TYPE_LEN = 3;
static const uint32_t WDF_DSTL_ECC_2_SYNDROME = 40;
static const uint32_t WDF_DSTL_ECC_2_SYNDROME_LEN = 8;
static const uint32_t WDF_DSTL_ECC_3_ERR_TYPE = 48;
static const uint32_t WDF_DSTL_ECC_3_ERR_TYPE_LEN = 3;
static const uint32_t WDF_DSTL_ECC_3_SYNDROME = 56;
static const uint32_t WDF_DSTL_ECC_3_SYNDROME_LEN = 8;
//<< [WDF_DSTL_ECC]
// mcc/reg00001.H

//>> [WDF_ECC]
static const uint64_t WDF_ECC = 0x0c010f41ull;

static const uint32_t WDF_ECC_0_ERR_TYPE = 0;
static const uint32_t WDF_ECC_0_ERR_TYPE_LEN = 3;
static const uint32_t WDF_ECC_0_SYNDROME = 8;
static const uint32_t WDF_ECC_0_SYNDROME_LEN = 8;
static const uint32_t WDF_ECC_1_ERR_TYPE = 16;
static const uint32_t WDF_ECC_1_ERR_TYPE_LEN = 3;
static const uint32_t WDF_ECC_1_SYNDROME = 24;
static const uint32_t WDF_ECC_1_SYNDROME_LEN = 8;
static const uint32_t WDF_ECC_2_ERR_TYPE = 32;
static const uint32_t WDF_ECC_2_ERR_TYPE_LEN = 3;
static const uint32_t WDF_ECC_2_SYNDROME = 40;
static const uint32_t WDF_ECC_2_SYNDROME_LEN = 8;
static const uint32_t WDF_ECC_3_ERR_TYPE = 48;
static const uint32_t WDF_ECC_3_ERR_TYPE_LEN = 3;
static const uint32_t WDF_ECC_3_SYNDROME = 56;
static const uint32_t WDF_ECC_3_SYNDROME_LEN = 8;
//<< [WDF_ECC]
// mcc/reg00001.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "mcc/reg00001_unused.H"
#endif
#endif
