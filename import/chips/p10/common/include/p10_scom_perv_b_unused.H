/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: import/chips/p10/common/include/p10_scom_perv_b_unused.H $    */
/*                                                                        */
/* OpenPOWER EKB Project                                                  */
/*                                                                        */
/* COPYRIGHT 2019,2020                                                    */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */

#ifndef __PPE_HCODE__
    #include "proc_scomt.H"
#endif

#ifndef __p10_scom_perv_b_H_UNUSED__
#define __p10_scom_perv_b_H_UNUSED__


#ifndef __PPE_HCODE__
namespace scomt
{
namespace perv
{
#endif


//>> [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE]
static const uint64_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE = 0x0001833cull;

static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE_OP_MODE_FSM = 3;
static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE_OP_MODE_FSM_LEN = 5;
//<< [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE]
// perv/reg00022.H

//>> [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE]
static const uint64_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE = 0x00018321ull;

static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE_SINGLE_STEP_MD_SET = 0;
static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE_ONE_SHOT_MD_SET = 1;
static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE_ADJUST_MD_SET = 2;
static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE_HOLD_MD_SET = 3;
static const uint32_t CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE_INIT_MD_SET = 4;
//<< [CLK_ADJ_00_SKEW_WRAP_SKEWADJ_SET_HOLD_MODE]
// perv/reg00022.H

//>> [CLK_ADJ_01_DCADJ_WRAP_SET_COMP_DLY]
static const uint64_t CLK_ADJ_01_DCADJ_WRAP_SET_COMP_DLY = 0x0001430bull;

static const uint32_t CLK_ADJ_01_DCADJ_WRAP_SET_COMP_DLY_COMP_DELAY_VALUE = 0;
static const uint32_t CLK_ADJ_01_DCADJ_WRAP_SET_COMP_DLY_COMP_DELAY_VALUE_LEN = 16;
//<< [CLK_ADJ_01_DCADJ_WRAP_SET_COMP_DLY]
// perv/reg00022.H

//>> [CLK_ADJ_01_DCADJ_WRAP_SET_DEC_DCC]
static const uint64_t CLK_ADJ_01_DCADJ_WRAP_SET_DEC_DCC = 0x0001430full;
//<< [CLK_ADJ_01_DCADJ_WRAP_SET_DEC_DCC]
// perv/reg00022.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES = 0x0001233aull;

static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_0 = 2;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_0_LEN = 6;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_1 = 10;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_1_LEN = 6;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_2 = 18;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_2_LEN = 6;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_3 = 26;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES_3_LEN = 6;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_CORE_PDLY_FSM_STATES]
// perv/reg00022.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA = 0x00012339ull;

static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ORE_IS_LATE = 3;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ORE_IS_LATE_HIST = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ORE_IS_LATE_HIST_LEN = 4;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ACHE_IS_LATE = 11;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ACHE_IS_LATE_HIST = 12;
static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA_ACHE_IS_LATE_HIST_LEN = 4;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SENSOR_DATA]
// perv/reg00022.H

//>> [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_CHICKEN_SWITCHES]
static const uint64_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_CHICKEN_SWITCHES = 0x00012335ull;

static const uint32_t CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_CHICKEN_SWITCHES_STOP_ON_ERROR = 0;
//<< [CLK_ADJ_02_SKEW_WRAP_SKEWADJ_SET_CHICKEN_SWITCHES]
// perv/reg00022.H

//>> [CLK_ADJ_03_DCADJ_WRAP_SET_DEC_DCC]
static const uint64_t CLK_ADJ_03_DCADJ_WRAP_SET_DEC_DCC = 0x0001130full;
//<< [CLK_ADJ_03_DCADJ_WRAP_SET_DEC_DCC]
// perv/reg00022.H

//>> [CLK_ADJ_03_DCADJ_WRAP_SET_HOLD_MODE]
static const uint64_t CLK_ADJ_03_DCADJ_WRAP_SET_HOLD_MODE = 0x00011301ull;

static const uint32_t CLK_ADJ_03_DCADJ_WRAP_SET_HOLD_MODE_SET_HOLD_MD = 0;
//<< [CLK_ADJ_03_DCADJ_WRAP_SET_HOLD_MODE]
// perv/reg00022.H

//>> [CLK_ADJ_03_DCADJ_WRAP_SET_LOW_PASS_DLY]
static const uint64_t CLK_ADJ_03_DCADJ_WRAP_SET_LOW_PASS_DLY = 0x00011309ull;

static const uint32_t CLK_ADJ_03_DCADJ_WRAP_SET_LOW_PASS_DLY_LOW_PASS_DELAY_VALUE = 0;
static const uint32_t CLK_ADJ_03_DCADJ_WRAP_SET_LOW_PASS_DLY_LOW_PASS_DELAY_VALUE_LEN = 16;
//<< [CLK_ADJ_03_DCADJ_WRAP_SET_LOW_PASS_DLY]
// perv/reg00022.H

//>> [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_CACHE_OVERRIDE]
static const uint64_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_CACHE_OVERRIDE = 0x00011327ull;

static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_CACHE_OVERRIDE_ENABLE = 0;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_CACHE_OVERRIDE_VALUE = 4;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_CACHE_OVERRIDE_VALUE_LEN = 4;
//<< [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_CACHE_OVERRIDE]
// perv/reg00022.H

//>> [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE]
static const uint64_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE = 0x0001133cull;

static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE_OP_MODE_FSM = 3;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE_OP_MODE_FSM_LEN = 5;
//<< [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_OP_MODE_FSM_STATE]
// perv/reg00022.H

//>> [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_SINGLE_STEP_MODE]
static const uint64_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_SINGLE_STEP_MODE = 0x00011324ull;
//<< [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_SINGLE_STEP_MODE]
// perv/reg00022.H

//>> [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_WAIT_CNT]
static const uint64_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_WAIT_CNT = 0x00011328ull;

static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_WAIT_CNT_WAIT_CNT_VALUE = 0;
static const uint32_t CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_WAIT_CNT_WAIT_CNT_VALUE_LEN = 6;
//<< [CLK_ADJ_03_SKEW_WRAP_SKEWADJ_SET_WAIT_CNT]
// perv/reg00022.H

//>> [QMETRA0_TR0_CONFIG_1]
static const uint64_t QMETRA0_TR0_CONFIG_1 = 0x00018404ull;

static const uint32_t QMETRA0_TR0_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t QMETRA0_TR0_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [QMETRA0_TR0_CONFIG_1]
// perv/reg00022.H

//>> [QMETRA0_TR1_TRACE_HI_DATA_REG]
static const uint64_t QMETRA0_TR1_TRACE_HI_DATA_REG = 0x00018440ull;

static const uint32_t QMETRA0_TR1_TRACE_HI_DATA_REG_TRACE_HI_DATA = 0;
static const uint32_t QMETRA0_TR1_TRACE_HI_DATA_REG_TRACE_HI_DATA_LEN = 64;
//<< [QMETRA0_TR1_TRACE_HI_DATA_REG]
// perv/reg00022.H

//>> [COMP_INTR_INTERRUPT_HOLD_REG]
static const uint64_t COMP_INTR_INTERRUPT_HOLD_REG = 0x000f0032ull;

static const uint32_t COMP_INTR_INTERRUPT_HOLD_REG_INTERRUPT_HOLD = 0;
static const uint32_t COMP_INTR_INTERRUPT_HOLD_REG_INTERRUPT_HOLD_LEN = 26;
//<< [COMP_INTR_INTERRUPT_HOLD_REG]
// perv/reg00022.H

//>> [EPS_DBG_TRACE_MODE_REG_2]
static const uint64_t EPS_DBG_TRACE_MODE_REG_2 = 0x000107cfull;

static const uint32_t EPS_DBG_TRACE_MODE_REG_2_RUNN_COUNT_COMPARE_VALUE = 0;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_RUNN_COUNT_COMPARE_VALUE_LEN = 16;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_IMM_FREEZE_MODE = 16;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_STOP_ON_ERR = 17;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_BANK_ON_RUNN_MATCH = 18;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_FORCE_TEST_MODE = 19;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_ACCUM_HIST_MODE = 20;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_FRZ_COUNT_ON = 21;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_EXTEND_BANK = 22;
static const uint32_t EPS_DBG_TRACE_MODE_REG_2_EXTEND_BANK_LEN = 2;
//<< [EPS_DBG_TRACE_MODE_REG_2]
// perv/reg00022.H

//>> [EPS_THERM_WSUB2_SKITTER_DATA2]
static const uint64_t EPS_THERM_WSUB2_SKITTER_DATA2 = 0x0005003bull;
//<< [EPS_THERM_WSUB2_SKITTER_DATA2]
// perv/reg00022.H

//>> [FIRST_ERR_REG]
static const uint64_t FIRST_ERR_REG = 0x000f001eull;

static const uint32_t FIRST_ERR_REG_TIMEOUT_ACTIVE = 0;
static const uint32_t FIRST_ERR_REG_PARITY_ERR = 1;
static const uint32_t FIRST_ERR_REG_BEAT_NUM_ERR = 2;
static const uint32_t FIRST_ERR_REG_BEAT_REC_ERR = 3;
static const uint32_t FIRST_ERR_REG_RECEIVED_ERROR = 4;
static const uint32_t FIRST_ERR_REG_RX_PCB_DATA_P_ERR = 5;
static const uint32_t FIRST_ERR_REG_PIB_ADDR_P_ERR = 6;
static const uint32_t FIRST_ERR_REG_PIB_DATA_P_ERR = 7;
//<< [FIRST_ERR_REG]
// perv/reg00022.H

//>> [FSXCOMP_FSXLOG_M1A_DATA_AREA_1]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M1A_DATA_AREA_1_FSI = 0x00002841ull;
static const uint32_t FSXCOMP_FSXLOG_M1A_DATA_AREA_1_FSI_BYTE = 0x00002904ull;
static const uint32_t FSXCOMP_FSXLOG_M1A_DATA_AREA_1_RW = 0x00050041ull;

static const uint32_t FSXCOMP_FSXLOG_M1A_DATA_AREA_1_MDA_M1A_DATA_AREA_1 = 0;
static const uint32_t FSXCOMP_FSXLOG_M1A_DATA_AREA_1_MDA_M1A_DATA_AREA_1_LEN = 32;
//<< [FSXCOMP_FSXLOG_M1A_DATA_AREA_1]
// perv/reg00022.H

//>> [FSXCOMP_FSXLOG_M2A_DATA_AREA_12]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_12_FSI = 0x000028ccull;
static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_12_FSI_BYTE = 0x00002b30ull;
static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_12_RW = 0x000500ccull;

static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_12_MDA_M2A_DATA_AREA_12 = 0;
static const uint32_t FSXCOMP_FSXLOG_M2A_DATA_AREA_12_MDA_M2A_DATA_AREA_12_LEN = 32;
//<< [FSXCOMP_FSXLOG_M2A_DATA_AREA_12]
// perv/reg00022.H

//>> [FSXCOMP_FSXLOG_M2B_DATA_AREA_7]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_7_FSI = 0x00002907ull;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_7_FSI_BYTE = 0x00002c1cull;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_7_RO = 0x00050107ull;

static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_7_MDA_M2B_DATA_AREA_7 = 0;
static const uint32_t FSXCOMP_FSXLOG_M2B_DATA_AREA_7_MDA_M2B_DATA_AREA_7_LEN = 32;
//<< [FSXCOMP_FSXLOG_M2B_DATA_AREA_7]
// perv/reg00022.H

//>> [FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B_FSI = 0x00002826ull;
static const uint32_t FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B_FSI_BYTE = 0x00002898ull;
static const uint32_t FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B_RO = 0x00050026ull;

static const uint32_t FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B_M1HC1B_MAILBOX_1_HEADER_COMMAND_B = 0;
static const uint32_t FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B_M1HC1B_MAILBOX_1_HEADER_COMMAND_B_LEN = 32;
//<< [FSXCOMP_FSXLOG_MAILBOX_1_HEADER_COMMAND_B]
// perv/reg00022.H

//>> [FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A]
//ERRCODE: // The addresses of this register do not all translate to the same targets.

static const uint32_t FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A_FSI = 0x0000282aull;
static const uint32_t FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A_FSI_BYTE = 0x000028a8ull;
static const uint32_t FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A_RW = 0x0005002aull;

static const uint32_t FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A_M2HC1A_MAILBOX_2_HEADER_COMMAND_1_A = 0;
static const uint32_t FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A_M2HC1A_MAILBOX_2_HEADER_COMMAND_1_A_LEN = 32;
//<< [FSXCOMP_FSXLOG_MAILBOX_2_HEADER_COMMAND_1_A]
// perv/reg00022.H

//>> [L3TRA0_TR1_CONFIG_1]
static const uint64_t L3TRA0_TR1_CONFIG_1 = 0x00018224ull;

static const uint32_t L3TRA0_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t L3TRA0_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [L3TRA0_TR1_CONFIG_1]
// perv/reg00022.H

//>> [L3TRA1_TR0_TRACE_LO_DATA_REG]
static const uint64_t L3TRA1_TR0_TRACE_LO_DATA_REG = 0x00018241ull;

static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_LO_DATA = 0;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_LO_DATA_LEN = 32;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_ADDRESS = 32;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_ADDRESS_LEN = 10;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_LAST_BANK = 42;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_LAST_BANK_LEN = 9;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_LAST_BANK_VALID = 51;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_WRITE_ON_RUN = 52;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_RUNNING = 53;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_HOLD_ADDRESS = 54;
static const uint32_t L3TRA1_TR0_TRACE_LO_DATA_REG_HOLD_ADDRESS_LEN = 10;
//<< [L3TRA1_TR0_TRACE_LO_DATA_REG]
// perv/reg00022.H

//>> [L3TRA2_TR0_CONFIG_0]
static const uint64_t L3TRA2_TR0_CONFIG_0 = 0x00018283ull;

static const uint32_t L3TRA2_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63 = 0;
static const uint32_t L3TRA2_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63_LEN = 64;
//<< [L3TRA2_TR0_CONFIG_0]
// perv/reg00022.H

//>> [L3TRA2_TR1_TRACE_HI_DATA_REG]
static const uint64_t L3TRA2_TR1_TRACE_HI_DATA_REG = 0x000182a0ull;

static const uint32_t L3TRA2_TR1_TRACE_HI_DATA_REG_TRACE_HI_DATA = 0;
static const uint32_t L3TRA2_TR1_TRACE_HI_DATA_REG_TRACE_HI_DATA_LEN = 64;
//<< [L3TRA2_TR1_TRACE_HI_DATA_REG]
// perv/reg00022.H

//>> [L3TRA2_TR1_CONFIG_9]
static const uint64_t L3TRA2_TR1_CONFIG_9 = 0x000182a9ull;

static const uint32_t L3TRA2_TR1_CONFIG_9_DISABLE_COMPRESSION = 0;
static const uint32_t L3TRA2_TR1_CONFIG_9_ERROR_BIT_COMPRESSION_CARE_MASK = 1;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHA_MUXSEL = 2;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHA_MUXSEL_LEN = 2;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHB_MUXSEL = 4;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHB_MUXSEL_LEN = 2;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHC_MUXSEL = 6;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHC_MUXSEL_LEN = 2;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHD_MUXSEL = 8;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCHD_MUXSEL_LEN = 2;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG0_OR_MASK = 10;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG0_OR_MASK_LEN = 4;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG0_AND_MASK = 14;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG0_AND_MASK_LEN = 4;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG1_OR_MASK = 18;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG1_OR_MASK_LEN = 4;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG1_AND_MASK = 22;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG1_AND_MASK_LEN = 4;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG0_NOT_MODE = 26;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG1_NOT_MODE = 27;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCH_NOT_MODE = 28;
static const uint32_t L3TRA2_TR1_CONFIG_9_MATCH_NOT_MODE_LEN = 4;
static const uint32_t L3TRA2_TR1_CONFIG_9_ERROR_CMP_MASK = 32;
static const uint32_t L3TRA2_TR1_CONFIG_9_ERROR_CMP_PATTERN = 33;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG0_ERR_CMP = 34;
static const uint32_t L3TRA2_TR1_CONFIG_9_TRIG1_ERR_CMP = 35;
static const uint32_t L3TRA2_TR1_CONFIG_9_DD1_STRETCH_TRIGGER_PULSES = 36;
static const uint32_t L3TRA2_TR1_CONFIG_9_SPARE_LT = 37;
//<< [L3TRA2_TR1_CONFIG_9]
// perv/reg00022.H

//>> [MCAST_GRP_1_SLAVES_REG]
static const uint64_t MCAST_GRP_1_SLAVES_REG = 0x000f0001ull;

static const uint32_t MCAST_GRP_1_SLAVES_REG_SLAVES_MCAST_GROUP_1 = 0;
static const uint32_t MCAST_GRP_1_SLAVES_REG_SLAVES_MCAST_GROUP_1_LEN = 6;
//<< [MCAST_GRP_1_SLAVES_REG]
// perv/reg00022.H

//>> [MCAST_GRP_2_SLAVES_REG]
static const uint64_t MCAST_GRP_2_SLAVES_REG = 0x000f0002ull;

static const uint32_t MCAST_GRP_2_SLAVES_REG_SLAVES_MCAST_GROUP_2 = 0;
static const uint32_t MCAST_GRP_2_SLAVES_REG_SLAVES_MCAST_GROUP_2_LEN = 6;
//<< [MCAST_GRP_2_SLAVES_REG]
// perv/reg00022.H

//>> [MCAST_GRP_4_SLAVES_REG]
static const uint64_t MCAST_GRP_4_SLAVES_REG = 0x000f0004ull;

static const uint32_t MCAST_GRP_4_SLAVES_REG_SLAVES_MCAST_GROUP_4 = 0;
static const uint32_t MCAST_GRP_4_SLAVES_REG_SLAVES_MCAST_GROUP_4_LEN = 6;
//<< [MCAST_GRP_4_SLAVES_REG]
// perv/reg00022.H

//>> [OTPC_M_EXPORT_REGL_CTRL]
static const uint64_t OTPC_M_EXPORT_REGL_CTRL = 0x0001000eull;

static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_NX_ALLOW_CRYPTO_DC = 0;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_EX_FUSE_VMX_CRYPTO_DIS_DC = 1;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_EX_EFUSE_EXTENDED_MEMORY_DISABLE_DC = 2;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_PB_FUSE_TOPOLOGY_2CHIP = 3;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_PB_FUSE_TOPOLOGY_GROUP = 4;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_PB_FUSE_TOPOLOGY_GROUP_LEN = 2;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_NP_NVLINK_DISABLE = 6;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_OTP_PCBMS_HW_MODE_SEL_DC = 7;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_OTP_PCBMS_FUSED_CORE_MODE_SEL0_DC = 8;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_OTP_PCBMS_FUSED_CORE_MODE_SEL1_DC = 9;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_MC_ALLOW_CRYPTO_DC = 10;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_OTP_SPIM_MEAS_SEEPROM_LOCK_DC = 11;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_PAU_POWER_HEADER_DISABLE_DC = 12;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_PAU_POWER_HEADER_DISABLE_DC_LEN = 6;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_EX_FUSE_FLOP_THROTTLE_EN_DC = 18;
static const uint32_t OTPC_M_EXPORT_REGL_CTRL_TP_EX_FUSE_FLOP_THROTTLE_EN_DC_LEN = 2;
//<< [OTPC_M_EXPORT_REGL_CTRL]
// perv/reg00022.H

//>> [OTPC_M_EXPORT_REGL_STATUS]
static const uint64_t OTPC_M_EXPORT_REGL_STATUS = 0x00010009ull;

static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_NX_ALLOW_CRYPTO_DC = 0;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_EX_FUSE_VMX_CRYPTO_DIS_DC = 1;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_EX_EFUSE_EXTENDED_MEMORY_DISABLE_DC = 2;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_PB_FUSE_TOPOLOGY_2CHIP = 3;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_PB_FUSE_TOPOLOGY_GROUP = 4;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_PB_FUSE_TOPOLOGY_GROUP_LEN = 2;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_NP_NVLINK_DISABLE = 6;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_OTP_PCBMS_HW_MODE_SEL_DC = 7;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_OTP_PCBMS_FUSED_CORE_MODE_SEL0_DC = 8;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_OTP_PCBMS_FUSED_CORE_MODE_SEL1_DC = 9;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_EX_FUSE_SMT8_CTYPE_EN_DC = 10;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_MC_ALLOW_CRYPTO_DC = 11;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_OTP_SPIM_MEAS_SEEPROM_LOCK_DC = 12;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_PAU_POWER_HEADER_DISABLE_DC = 13;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_PAU_POWER_HEADER_DISABLE_DC_LEN = 6;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_EX_FUSE_FLOP_THROTTLE_EN_DC = 19;
static const uint32_t OTPC_M_EXPORT_REGL_STATUS_TP_EX_FUSE_FLOP_THROTTLE_EN_DC_LEN = 2;
//<< [OTPC_M_EXPORT_REGL_STATUS]
// perv/reg00022.H

//>> [OTPC_M_MEASURE_REG1]
static const uint64_t OTPC_M_MEASURE_REG1 = 0x00010011ull;

static const uint32_t OTPC_M_MEASURE_REG1_SEEPROM_MEASUREMENT1_DATA = 0;
static const uint32_t OTPC_M_MEASURE_REG1_SEEPROM_MEASUREMENT1_DATA_LEN = 64;
//<< [OTPC_M_MEASURE_REG1]
// perv/reg00022.H

//>> [REC_ERR_MST4_REG2]
static const uint64_t REC_ERR_MST4_REG2 = 0x000f0052ull;

static const uint32_t REC_ERR_MST4_REG2_32_MST4_RESPONSE_BIT = 0;
static const uint32_t REC_ERR_MST4_REG2_32_MST4_ERROR_CODE = 1;
static const uint32_t REC_ERR_MST4_REG2_32_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_33_MST4_RESPONSE_BIT = 4;
static const uint32_t REC_ERR_MST4_REG2_33_MST4_ERROR_CODE = 5;
static const uint32_t REC_ERR_MST4_REG2_33_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_34_MST4_RESPONSE_BIT = 8;
static const uint32_t REC_ERR_MST4_REG2_34_MST4_ERROR_CODE = 9;
static const uint32_t REC_ERR_MST4_REG2_34_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_35_MST4_RESPONSE_BIT = 12;
static const uint32_t REC_ERR_MST4_REG2_35_MST4_ERROR_CODE = 13;
static const uint32_t REC_ERR_MST4_REG2_35_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_36_MST4_RESPONSE_BIT = 16;
static const uint32_t REC_ERR_MST4_REG2_36_MST4_ERROR_CODE = 17;
static const uint32_t REC_ERR_MST4_REG2_36_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_37_MST4_RESPONSE_BIT = 20;
static const uint32_t REC_ERR_MST4_REG2_37_MST4_ERROR_CODE = 21;
static const uint32_t REC_ERR_MST4_REG2_37_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_38_MST4_RESPONSE_BIT = 24;
static const uint32_t REC_ERR_MST4_REG2_38_MST4_ERROR_CODE = 25;
static const uint32_t REC_ERR_MST4_REG2_38_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_39_MST4_RESPONSE_BIT = 28;
static const uint32_t REC_ERR_MST4_REG2_39_MST4_ERROR_CODE = 29;
static const uint32_t REC_ERR_MST4_REG2_39_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_40_MST4_RESPONSE_BIT = 32;
static const uint32_t REC_ERR_MST4_REG2_40_MST4_ERROR_CODE = 33;
static const uint32_t REC_ERR_MST4_REG2_40_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_41_MST4_RESPONSE_BIT = 36;
static const uint32_t REC_ERR_MST4_REG2_41_MST4_ERROR_CODE = 37;
static const uint32_t REC_ERR_MST4_REG2_41_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_42_MST4_RESPONSE_BIT = 40;
static const uint32_t REC_ERR_MST4_REG2_42_MST4_ERROR_CODE = 41;
static const uint32_t REC_ERR_MST4_REG2_42_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_43_MST4_RESPONSE_BIT = 44;
static const uint32_t REC_ERR_MST4_REG2_43_MST4_ERROR_CODE = 45;
static const uint32_t REC_ERR_MST4_REG2_43_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_44_MST4_RESPONSE_BIT = 48;
static const uint32_t REC_ERR_MST4_REG2_44_MST4_ERROR_CODE = 49;
static const uint32_t REC_ERR_MST4_REG2_44_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_45_MST4_RESPONSE_BIT = 52;
static const uint32_t REC_ERR_MST4_REG2_45_MST4_ERROR_CODE = 53;
static const uint32_t REC_ERR_MST4_REG2_45_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_46_MST4_RESPONSE_BIT = 56;
static const uint32_t REC_ERR_MST4_REG2_46_MST4_ERROR_CODE = 57;
static const uint32_t REC_ERR_MST4_REG2_46_MST4_ERROR_CODE_LEN = 3;
static const uint32_t REC_ERR_MST4_REG2_47_MST4_RESPONSE_BIT = 60;
static const uint32_t REC_ERR_MST4_REG2_47_MST4_ERROR_CODE = 61;
static const uint32_t REC_ERR_MST4_REG2_47_MST4_ERROR_CODE_LEN = 3;
//<< [REC_ERR_MST4_REG2]
// perv/reg00022.H

//>> [SINGLE_OTP_ROM_OTPROM_REG103]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG103 = 0x00018067ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG103_REGISTER103 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG103_REGISTER103_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG103]
// perv/reg00022.H

//>> [SINGLE_OTP_ROM_OTPROM_REG12]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG12 = 0x0001800cull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG12_REGISTER12 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG12_REGISTER12_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG12]
// perv/reg00022.H

//>> [SINGLE_OTP_ROM_OTPROM_REG44]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG44 = 0x0001802cull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG44_REGISTER44 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG44_REGISTER44_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG44]
// perv/reg00023.H

//>> [SINGLE_OTP_ROM_OTPROM_REG73]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG73 = 0x00018049ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG73_REGISTER73 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG73_REGISTER73_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG73]
// perv/reg00023.H

//>> [SINGLE_OTP_ROM_OTPROM_REG86]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG86 = 0x00018056ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG86_REGISTER86 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG86_REGISTER86_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG86]
// perv/reg00023.H

//>> [SINGLE_OTP_ROM_OTPROM_REG99]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG99 = 0x00018063ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG99_REGISTER99 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG99_REGISTER99_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG99]
// perv/reg00023.H

//>> [TOD_TX_TTYPE_0_REG]
static const uint64_t TOD_TX_TTYPE_0_REG = 0x00040011ull;

static const uint32_t TOD_TX_TTYPE_0_REG_TX_TTYPE_0_TRIGGER = 0;
//<< [TOD_TX_TTYPE_0_REG]
// perv/reg00023.H

//>> [TOD_TX_TTYPE_1_REG]
static const uint64_t TOD_TX_TTYPE_1_REG = 0x00040012ull;

static const uint32_t TOD_TX_TTYPE_1_REG_TX_TTYPE_1_TRIGGER = 0;
//<< [TOD_TX_TTYPE_1_REG]
// perv/reg00023.H

//>> [TOD_TX_TTYPE_3_REG]
static const uint64_t TOD_TX_TTYPE_3_REG = 0x00040014ull;

static const uint32_t TOD_TX_TTYPE_3_REG_TX_TTYPE_3_TRIGGER = 0;
//<< [TOD_TX_TTYPE_3_REG]
// perv/reg00023.H

//>> [TRA0_TR1_CONFIG_1]
static const uint64_t TRA0_TR1_CONFIG_1 = 0x00010444ull;

static const uint32_t TRA0_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t TRA0_TR1_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [TRA0_TR1_CONFIG_1]
// perv/reg00023.H

//>> [TRA2_TR0_CONFIG_0]
static const uint64_t TRA2_TR0_CONFIG_0 = 0x00010503ull;

static const uint32_t TRA2_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63 = 0;
static const uint32_t TRA2_TR0_CONFIG_0_CMP_MSK_LT_B_0_TO_63_LEN = 64;
//<< [TRA2_TR0_CONFIG_0]
// perv/reg00023.H

//>> [TRA2_TR1_CONFIG]
static const uint64_t TRA2_TR1_CONFIG = 0x00010542ull;

static const uint32_t TRA2_TR1_CONFIG_STORE_ON_TRIG_MODE = 0;
static const uint32_t TRA2_TR1_CONFIG_WRITE_ON_RUN_MODE = 1;
static const uint32_t TRA2_TR1_CONFIG_EXTEND_TRIG_MODE = 2;
static const uint32_t TRA2_TR1_CONFIG_EXTEND_TRIG_MODE_LEN = 8;
static const uint32_t TRA2_TR1_CONFIG_BANK_MODE = 10;
static const uint32_t TRA2_TR1_CONFIG_ENH_TRACE_MODE = 11;
static const uint32_t TRA2_TR1_CONFIG_LOCAL_CLOCK_GATE_CONTROL = 12;
static const uint32_t TRA2_TR1_CONFIG_LOCAL_CLOCK_GATE_CONTROL_LEN = 2;
static const uint32_t TRA2_TR1_CONFIG_TRACE_SELECT_CONTROL = 14;
static const uint32_t TRA2_TR1_CONFIG_TRACE_SELECT_CONTROL_LEN = 4;
static const uint32_t TRA2_TR1_CONFIG_TRACE_RUN_HOLD_OFF = 18;
static const uint32_t TRA2_TR1_CONFIG_TRACE_RUN_STATUS = 19;
static const uint32_t TRA2_TR1_CONFIG_TRACE_RUN_STICKY = 20;
static const uint32_t TRA2_TR1_CONFIG_DISABLE_BANK_EDGE_DETECT = 21;
static const uint32_t TRA2_TR1_CONFIG_DISABLE_SCOM_TRCTRL_TRARR_RD_ACT = 22;
static const uint32_t TRA2_TR1_CONFIG_MASTER_CLOCK_ENABLE_INT = 23;
//<< [TRA2_TR1_CONFIG]
// perv/reg00023.H

//>> [TRA2_TR1_CONFIG_9]
static const uint64_t TRA2_TR1_CONFIG_9 = 0x00010549ull;

static const uint32_t TRA2_TR1_CONFIG_9_DISABLE_COMPRESSION = 0;
static const uint32_t TRA2_TR1_CONFIG_9_ERROR_BIT_COMPRESSION_CARE_MASK = 1;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHA_MUXSEL = 2;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHA_MUXSEL_LEN = 2;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHB_MUXSEL = 4;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHB_MUXSEL_LEN = 2;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHC_MUXSEL = 6;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHC_MUXSEL_LEN = 2;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHD_MUXSEL = 8;
static const uint32_t TRA2_TR1_CONFIG_9_MATCHD_MUXSEL_LEN = 2;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG0_OR_MASK = 10;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG0_OR_MASK_LEN = 4;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG0_AND_MASK = 14;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG0_AND_MASK_LEN = 4;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG1_OR_MASK = 18;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG1_OR_MASK_LEN = 4;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG1_AND_MASK = 22;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG1_AND_MASK_LEN = 4;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG0_NOT_MODE = 26;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG1_NOT_MODE = 27;
static const uint32_t TRA2_TR1_CONFIG_9_MATCH_NOT_MODE = 28;
static const uint32_t TRA2_TR1_CONFIG_9_MATCH_NOT_MODE_LEN = 4;
static const uint32_t TRA2_TR1_CONFIG_9_ERROR_CMP_MASK = 32;
static const uint32_t TRA2_TR1_CONFIG_9_ERROR_CMP_PATTERN = 33;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG0_ERR_CMP = 34;
static const uint32_t TRA2_TR1_CONFIG_9_TRIG1_ERR_CMP = 35;
static const uint32_t TRA2_TR1_CONFIG_9_DD1_STRETCH_TRIGGER_PULSES = 36;
static const uint32_t TRA2_TR1_CONFIG_9_SPARE_LT = 37;
//<< [TRA2_TR1_CONFIG_9]
// perv/reg00023.H

//>> [TRA3_TR0_CONFIG]
static const uint64_t TRA3_TR0_CONFIG = 0x00010582ull;

static const uint32_t TRA3_TR0_CONFIG_STORE_ON_TRIG_MODE = 0;
static const uint32_t TRA3_TR0_CONFIG_WRITE_ON_RUN_MODE = 1;
static const uint32_t TRA3_TR0_CONFIG_EXTEND_TRIG_MODE = 2;
static const uint32_t TRA3_TR0_CONFIG_EXTEND_TRIG_MODE_LEN = 8;
static const uint32_t TRA3_TR0_CONFIG_BANK_MODE = 10;
static const uint32_t TRA3_TR0_CONFIG_ENH_TRACE_MODE = 11;
static const uint32_t TRA3_TR0_CONFIG_LOCAL_CLOCK_GATE_CONTROL = 12;
static const uint32_t TRA3_TR0_CONFIG_LOCAL_CLOCK_GATE_CONTROL_LEN = 2;
static const uint32_t TRA3_TR0_CONFIG_TRACE_SELECT_CONTROL = 14;
static const uint32_t TRA3_TR0_CONFIG_TRACE_SELECT_CONTROL_LEN = 4;
static const uint32_t TRA3_TR0_CONFIG_TRACE_RUN_HOLD_OFF = 18;
static const uint32_t TRA3_TR0_CONFIG_TRACE_RUN_STATUS = 19;
static const uint32_t TRA3_TR0_CONFIG_TRACE_RUN_STICKY = 20;
static const uint32_t TRA3_TR0_CONFIG_DISABLE_BANK_EDGE_DETECT = 21;
static const uint32_t TRA3_TR0_CONFIG_DISABLE_SCOM_TRCTRL_TRARR_RD_ACT = 22;
static const uint32_t TRA3_TR0_CONFIG_MASTER_CLOCK_ENABLE_INT = 23;
//<< [TRA3_TR0_CONFIG]
// perv/reg00023.H

//>> [TRA5_TR0_CONFIG_1]
static const uint64_t TRA5_TR0_CONFIG_1 = 0x00010684ull;

static const uint32_t TRA5_TR0_CONFIG_1_CMP_MSK_LT_B_64_TO_87 = 0;
static const uint32_t TRA5_TR0_CONFIG_1_CMP_MSK_LT_B_64_TO_87_LEN = 24;
//<< [TRA5_TR0_CONFIG_1]
// perv/reg00023.H

//>> [TRA5_TR1_TRACE_LO_DATA_REG]
static const uint64_t TRA5_TR1_TRACE_LO_DATA_REG = 0x000106c1ull;

static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_LO_DATA = 0;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_LO_DATA_LEN = 32;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_ADDRESS = 32;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_ADDRESS_LEN = 10;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_LAST_BANK = 42;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_LAST_BANK_LEN = 9;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_LAST_BANK_VALID = 51;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_WRITE_ON_RUN = 52;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_RUNNING = 53;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_HOLD_ADDRESS = 54;
static const uint32_t TRA5_TR1_TRACE_LO_DATA_REG_HOLD_ADDRESS_LEN = 10;
//<< [TRA5_TR1_TRACE_LO_DATA_REG]
// perv/reg00023.H

//>> [TRA6_TR0_TRACE_HI_DATA_REG]
static const uint64_t TRA6_TR0_TRACE_HI_DATA_REG = 0x00010700ull;

static const uint32_t TRA6_TR0_TRACE_HI_DATA_REG_TRACE_HI_DATA = 0;
static const uint32_t TRA6_TR0_TRACE_HI_DATA_REG_TRACE_HI_DATA_LEN = 64;
//<< [TRA6_TR0_TRACE_HI_DATA_REG]
// perv/reg00023.H

//>> [TRA7_TR0_CONFIG_9]
static const uint64_t TRA7_TR0_CONFIG_9 = 0x00010789ull;

static const uint32_t TRA7_TR0_CONFIG_9_DISABLE_COMPRESSION = 0;
static const uint32_t TRA7_TR0_CONFIG_9_ERROR_BIT_COMPRESSION_CARE_MASK = 1;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHA_MUXSEL = 2;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHA_MUXSEL_LEN = 2;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHB_MUXSEL = 4;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHB_MUXSEL_LEN = 2;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHC_MUXSEL = 6;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHC_MUXSEL_LEN = 2;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHD_MUXSEL = 8;
static const uint32_t TRA7_TR0_CONFIG_9_MATCHD_MUXSEL_LEN = 2;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG0_OR_MASK = 10;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG0_OR_MASK_LEN = 4;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG0_AND_MASK = 14;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG0_AND_MASK_LEN = 4;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG1_OR_MASK = 18;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG1_OR_MASK_LEN = 4;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG1_AND_MASK = 22;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG1_AND_MASK_LEN = 4;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG0_NOT_MODE = 26;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG1_NOT_MODE = 27;
static const uint32_t TRA7_TR0_CONFIG_9_MATCH_NOT_MODE = 28;
static const uint32_t TRA7_TR0_CONFIG_9_MATCH_NOT_MODE_LEN = 4;
static const uint32_t TRA7_TR0_CONFIG_9_ERROR_CMP_MASK = 32;
static const uint32_t TRA7_TR0_CONFIG_9_ERROR_CMP_PATTERN = 33;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG0_ERR_CMP = 34;
static const uint32_t TRA7_TR0_CONFIG_9_TRIG1_ERR_CMP = 35;
static const uint32_t TRA7_TR0_CONFIG_9_DD1_STRETCH_TRIGGER_PULSES = 36;
static const uint32_t TRA7_TR0_CONFIG_9_SPARE_LT = 37;
//<< [TRA7_TR0_CONFIG_9]
// perv/reg00023.H

//>> [SINGLE_OTP_ROM_OTPROM_REG25]
static const uint64_t SINGLE_OTP_ROM_OTPROM_REG25 = 0x00018019ull;

static const uint32_t SINGLE_OTP_ROM_OTPROM_REG25_REGISTER25 = 0;
static const uint32_t SINGLE_OTP_ROM_OTPROM_REG25_REGISTER25_LEN = 64;
//<< [SINGLE_OTP_ROM_OTPROM_REG25]
// perv/reg00022.H

//>>THE END<<

#ifndef __PPE_HCODE__
}
}
#include "perv/reg00022_unused.H"
#include "perv/reg00023_unused.H"
#endif
#endif
